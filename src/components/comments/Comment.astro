---
export type Props = {
  comment: TransformedComment & { data: { message?: string } };
};
import type { TransformedComment } from "@/scripts/comments";
import { Icon } from "astro-icon/components";
const { comment } = Astro.props;
const { data } = comment;
const { date } = data;
const reply = data.reply
  ? {
    ...comment,
    data: {
      id: comment.id + "r",
      name: "猫猫",
      date: date,
      message: data.reply,
      email: "",
    },
  }
  : undefined;

const message = data.message? data.message : await comment.render();
---

<li itemprop="comment" id={"comment-" + data.id}>
  <hgroup>
    <h4 set:html={data.name} itemprop="name" />
    &nbsp;
    <time
      class="monospace"
      datetime={date.toISOString()}
      set:text={date.toLocaleDateString("zh")}
      itemprop="datePublished"
    />
  </hgroup>
    {
      typeof message === 'string' ?
      <div class="message" set:html={message} /> :   
      <div class="message"> <message.Content /> </div>
    }
  {
    reply && (
      <div class="reply">
        <div class="icon">
          <Icon name="mdi:reply" />
        </div>
        <ul>
          <Astro.self comment={reply} />
        </ul>
      </div>
    )
  }
</li>

<style lang="less" is:global>
  .reply {
    margin-block-start: 8px;
    padding-inline: 1em;
    background-color: rgba(0, 0, 0, 0.06);
    display: flex;
    gap: 8px;
    justify-content: center;
    line-height: 1.6;
    h2 {
      margin-block: 1.5rem 0;
      margin-inline: auto;
      text-align: center;
    }
    p {
      margin: 0;
      + p {
        margin-block-start: 0.5em;
      }
    }
    .icon {
      margin: auto;
      min-width: 20px;
      flex: 0 0 auto;
    }
    ul {
      flex: 1;
      list-style: none;
      padding: 0;
      margin: 4px;
    }
  }
</style>

<style lang="less">
  li {
    text-align: left; // reset Chrome's default
    padding-block: 0.6em;
    margin-block: 0.3em;
    & + & {
      border-block-start: 1px solid rgba(0, 0, 0, 0.2);
    }

    .message,
    .message > * {
      font-size: 16px;
      text-align: start;
    }

    hgroup {
      display: flex;
      align-items: self-end;
      h4 {
        font-size: 90%;
        margin-block: .2rem;
      }
      time {
        font-size: .9rem;
        color: var(--text-secondary);
        margin-inline-start: 0.5rem;
        margin-block-end: 0.2rem;
      }
    }
  }
</style>
