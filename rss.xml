<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>新世界的大门</title>
    <link>https://blog.xinshijiededa.men/</link>
    
    <atom:link href="https://blog.xinshijiededa.men/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>猫猫的博客</description>
    <pubDate>Wed, 05 Apr 2023 15:46:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>三键成码：用三个字母和任意符号输出 Hello World</title>
      <link>https://blog.xinshijiededa.men/three-keys-hello-world-in-powershell/</link>
      <guid>https://blog.xinshijiededa.men/three-keys-hello-world-in-powershell/</guid>
      <pubDate>Wed, 05 Apr 2023 15:40:00 GMT</pubDate>
      
        
        
      <description>&lt;head&gt;
&lt;meta charset=utf-8&gt;
&lt;link href=/_astro/three-keys-hello-world-in-powershell.db3208af.css rel=stylesheet /&gt;
&lt;/head&gt;
&lt;blockquote&gt;
&lt;p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<head><meta charset=utf-8><link href=/_astro/three-keys-hello-world-in-powershell.db3208af.css rel=stylesheet /></head><blockquote><p>为什么不试试 M$ 的功率壳呢？截至 2023 年 3 月，PowerShell 在 GitHub 使用量排第 32 名，占比 0.102%。<sup><a href=#user-content-fn-3psrank aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3psrank>1</a></sup></p></blockquote><p>其实 <a href=https://github.com/InvoluteHell/ThreeKeysProgramming/tree/master/OverflowCat>这篇文章</a> 在去年暑假就已经写好，不过最近我的 <a href=https://github.com/InvoluteHell/ThreeKeysProgramming/pull/36>pull request</a> 才被合并，已经快忘掉了。现修缮后发出来。</p><h2 id="规则">规则</h2><p>三键成码一项编程比赛，要求参赛者仅用三个字母或数字以及任意数量的符号编码输出 <code>Hello, World!</code>，并且文件体积最小者获胜。以下是详细规则：</p><blockquote><ol><li>参赛选手自行挑选三个「字母 / 数字」来编写代码，代码中的「字母 / 数字」<strong>只能且必须</strong> 有这三个（大小写算两个不同的键）</li><li>除此三个「字母 / 数字」外，额外允许使用普通键盘上的所有 ASCII 符号（例如 <code>&#123;</code>, <code>;</code> 等）</li><li>该程序运行后输出 <code>Hello, World!</code>, 有且仅有该内容，要求分毫不差，注意大小写和符号</li><li>上传的所有文件体积最小者获胜！（结果截图、说明文档等的不算）</li><li>不限编程语言，但禁止使用极小众语言；我们对极小众的定义是：<a href=https://madnight.github.io/githut/#/pull_requests/2022/1>Github 语言统计</a> 上从未出现过的语言</li><li>所有的依赖条件均需是在本比赛开始前就是已有的；否则请上传，作为文件内容统计的一部分！</li><li>要求使用平庸的编译/执行命令、测试环境、文件名，除平庸部分外，其余部分也需要符合上述 1, 2 两条的要求</li><li>静态类型语言的入口函数名，不受 1 中的限制。例如 C 语言的 <code>int main</code>, Java 的 <code>public static void main</code> 等</li></ol></blockquote><h2 id="代码">代码</h2><p>选择的 3 个字母：<code>i</code>、<code>e</code>、<code>x</code>。</p><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#2f86d2>$i</span><span style=color:#7b30d0>=</span><span style=color:#002339>$?</span><span style=color:#7b30d0>+</span><span style=color:#002339>$?</span></span><span class=line><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$i</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span></span><span class=line><span style=color:#2f86d2>$xi</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span></span><span class=line><span style=color:#2f86d2>$xe</span><span style=color:#7b30d0>=</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span></span><span class=line><span style=color:#2f86d2>$xx</span><span style=color:#7b30d0>=</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>+--</span><span style=color:#2f86d2>$e</span></span><span class=line><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#002339>(</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#002339>$?)[</span><span style=color:#2f86d2>$i</span><span style=color:#002339>]</span></span><span class=line><span style=color:#002339>iex </span><span style=color:#a44185>"</span><span style=color:#174781>`$</span><span style=color:#a44185>ex=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xe</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>;</span><span style=color:#174781>`$</span><span style=color:#a44185>xe=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xx</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>"</span></span><span class=line><span style=color:#2f86d2>$ii</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>+++</span><span style=color:#2f86d2>$i</span></span><span class=line><span style=color:#2f86d2>$ix</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$ii</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span></span><span class=line><span style=color:#2f86d2>$ei</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>*</span><span style=color:#2f86d2>$i</span></span><span class=line><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#a44185>"</span><span style=color:#174781>``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;"</span></span><span class=line><span style=color:#002339>iex </span><span style=color:#a44185>"</span><span style=color:#174781>`$</span><span style=color:#a44185>e=</span><span style=color:#174781>""</span><span style=color:#2f86d2>$x$e$ei</span><span style=color:#a44185>&#125;e</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$ex</span><span style=color:#a44185>&#125;, </span><span style=color:#2f86d2>$x$ii$ix</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$ex</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$ix$i</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$e</span><span style=color:#a44185>&#125;!</span><span style=color:#174781>""</span><span style=color:#a44185>"</span></span><span class=line><span style=color:#2f86d2>$e</span></span></code></pre></div><p>压成一行时语句结尾需要有分号。</p><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#2f86d2>$i</span><span style=color:#7b30d0>=</span><span style=color:#002339>$?</span><span style=color:#7b30d0>+</span><span style=color:#002339>$?;</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$i</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span><span style=color:#002339>;</span><span style=color:#2f86d2>$xi</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span><span style=color:#002339>;</span><span style=color:#2f86d2>$xe</span><span style=color:#7b30d0>=</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span><span style=color:#002339>;</span><span style=color:#2f86d2>$xx</span><span style=color:#7b30d0>=</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>+--</span><span style=color:#2f86d2>$e</span><span style=color:#002339>;</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#002339>(</span><span style=color:#a44185>""</span><span style=color:#7b30d0>+</span><span style=color:#002339>$?)[</span><span style=color:#2f86d2>$i</span><span style=color:#002339>];iex </span><span style=color:#a44185>"</span><span style=color:#174781>`$</span><span style=color:#a44185>ex=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xe</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>;</span><span style=color:#174781>`$</span><span style=color:#a44185>xe=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xx</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>"</span><span style=color:#002339>;</span><span style=color:#2f86d2>$ii</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>+++</span><span style=color:#2f86d2>$i</span><span style=color:#002339>;</span><span style=color:#2f86d2>$ix</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$ii</span><span style=color:#7b30d0>+</span><span style=color:#2f86d2>$i</span><span style=color:#002339>;</span><span style=color:#2f86d2>$ei</span><span style=color:#7b30d0>=</span><span style=color:#2f86d2>$e</span><span style=color:#7b30d0>*</span><span style=color:#2f86d2>$i</span><span style=color:#002339>;</span><span style=color:#2f86d2>$x</span><span style=color:#7b30d0>=</span><span style=color:#a44185>"</span><span style=color:#174781>``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;"</span><span style=color:#002339>;iex </span><span style=color:#a44185>"</span><span style=color:#174781>`$</span><span style=color:#a44185>e=</span><span style=color:#174781>""</span><span style=color:#2f86d2>$x$e$ei</span><span style=color:#a44185>&#125;e</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$ex</span><span style=color:#a44185>&#125;, </span><span style=color:#2f86d2>$x$ii$ix</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$ex</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$ix$i</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$xe</span><span style=color:#a44185>&#125;</span><span style=color:#2f86d2>$x$xi$e</span><span style=color:#a44185>&#125;!</span><span style=color:#174781>""</span><span style=color:#a44185>"</span><span style=color:#002339>;</span><span style=color:#2f86d2>$e</span></span></code></pre></div><h3 id="环境">环境</h3><p><strong>PowerShell 7.2.5</strong>，需要自行安装，Windows 自带的版本较旧，没有 Unicode 转义字符。</p><p>代码可以在终端直接粘贴，或者通过 <code>..ps1</code> 运行。</p><h2 id="原理">原理</h2><h3 id="选择字母">选择字母</h3><p>让我们先来看看其他提交者所用的语言中是怎么做到的：</p><ul><li>JavaScript 有 <a href=http://www.jsfuck.com/ >JSFuck</a> 这种东西，甚至可以只有符号，自然是不消说的</li><li>Python 版本中选择了 <code>exec</code>——Python 中的 <code>eval</code> 只能执行单纯的表达式，无法创建变量，而且需要 4 个字母；而 <code>exec</code> 可以执行代码块</li><li>Bash 用了 <code>tr</code></li><li>Ruby 选了 <code>c</code> 和另外两个数字——Ruby 中 <code>&lt;&lt;</code> 是字符串连接运算符，<code>$&gt;</code> 是 <code>stdout</code>，后面用格式化字符串 <code>"%c"</code> 和一个整数数组</li><li>C 利用了 UB 和不平凡的编译命令</li><li>PHP 选了 <code>H</code>、<code>e</code>、<code>l</code>，剩下的字符惊为天人，不知道是利用了什么隐式类型转换，看不懂</li></ul><p>PowerShell 中无法对 Char 进行加减操作，显式地进行类型转换也需要类似 <code>[char]65</code> 至少 4 个字母。<sup><a href=#user-content-fn-3key1 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key1>2</a></sup>所以只能考虑 eval。PowerShell 中的命令名都很长，不过 Invoke-Expression 有别名 <code>iex</code>。另外有一个可以执行字符串的操作符 <code>&amp;</code>，但是只能是命令名，不能带参数。<sup><a href=#user-content-fn-3key2 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key2>3</a></sup></p><h3 id="第一个数字">第一个数字</h3><p>因为不能直接出现数字了，所以需要想办法得到第一个 Int 类型的值。发现数组下标为空字符串 <code>''</code> 时可以得到数组的第一个元素，但是如果想要后面的字母的话，PowerShell 并没有提供 pop 等函数。<sup><a href=#user-content-fn-3key3 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key3>4</a></sup> 数字字面量也都至少需要有 <code>0</code> 出现。所以只能通过其他类型隐式转换出 Int 来。</p><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#2f86d2>$i</span><span style=color:#002339> </span><span style=color:#7b30d0>=</span><span style=color:#002339> $? </span><span style=color:#7b30d0>+</span><span style=color:#002339> $?</span></span></code></pre></div><ul><li><code>$?</code> 表示上一条命令的返回值，在初始时和上一条命令没有出错时为 <code>True</code>。<sup><a href=#user-content-fn-3key4 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key4>5</a></sup></li><li>PowerShell 中的 <code>==</code> 是 <code>-eq</code>，需要额外的字母。</li><li>当 Bool 类型转换为整数时，<code>True</code> 是 <code>1</code>，故 <code>$i<code>为</code>2</code>。<sup><a href=#user-content-fn-3key5 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key5>6</a></sup></li></ul><p>剩下的大部分操作都是在构造其他数字，代码的长度应该可以再压缩一点。</p><h3 id="构造-unicode">构造 Unicode</h3><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#2f86d2>$x</span><span style=color:#002339> </span><span style=color:#7b30d0>=</span><span style=color:#002339> (</span><span style=color:#a44185>""</span><span style=color:#002339> </span><span style=color:#7b30d0>+</span><span style=color:#002339> $?)[</span><span style=color:#2f86d2>$i</span><span style=color:#002339>]</span></span></code></pre></div><ul><li><code>+</code> 运算符的两个参数类型不一致的时候，会将第二个参数隐式转换为第一个参数的类型。故此处 <code>$e</code> 为 String <code>"True"</code>。</li></ul><p>至此，我们有了所需的数字和字母 <code>u</code>，可以用 <code>"u&#123;x&#125;"</code> 来生成一切字符了。不过，<code>"Hello World!"</code> 除了可以直接输入的 <code>e</code>、空格和 <code>!</code>，十六进制值中还需要 <code>c</code> 和 <code>f</code>。幸好这两个的编码分别为 <code>63</code> 和 <code>66</code>，没有 a-f 出现。<code>$e</code> 实际上就是：</p><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#2f86d2>$e</span><span style=color:#002339> </span><span style=color:#7b30d0>=</span><span style=color:#002339> </span><span style=color:#a44185>"</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;48&#125;e</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;6c&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;6c&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;6f&#125;, </span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;57&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;6f&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;72&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;6c&#125;</span><span style=color:#174781>``</span><span style=color:#a44185>u&#123;64&#125;!"</span><span style=color:#002339>;</span></span></code></pre></div><h4 id="转义字符">转义字符</h4><div data-rehype-pretty-code-fragment=""><pre data-language=powershell data-theme=default><code data-language=powershell data-theme=default><span class=line><span style=color:#002339>iex </span><span style=color:#a44185>"</span><span style=color:#174781>`$</span><span style=color:#a44185>ex=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xe</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>;</span><span style=color:#174781>`$</span><span style=color:#a44185>xe=</span><span style=color:#174781>""``</span><span style=color:#2f86d2>$x</span><span style=color:#a44185>&#123;</span><span style=color:#2f86d2>$xx</span><span style=color:#a44185>&#125;</span><span style=color:#174781>""</span><span style=color:#a44185>"</span></span></code></pre></div><ul><li>字符串用双引号的好处是可以直接嵌入变量。如果要 escape 的话，需要在 <code>$</code>、<code>"</code>、<code><code>&lt;/code&gt; 前面加上 &lt;code&gt;</code></code>；<code>"</code> 也可以自身重复两次 <code>""</code> 来 escape。<sup><a href=#user-content-fn-3key6 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key6>7</a></sup></li></ul><h3 id="打印值">打印值</h3><p>PowerShell 默认打印出前一个表达式的值，所以不需要拼凑出 <code>"echo"</code> 再 <code>iex</code> 什么的。</p><h3 id="其他可能的方法">其他可能的方法</h3><ul><li>变量赋值时可以直接是命令的输出。比如旧版 PowerShell 可以通过 <code>$ls = ls; $ls[x][x]</code> 拿到 ls 命令表头具体的一个 Char，或许有的命令的输出包含全部所需的字母。但是新版中大部分命令的输出不再是字符串而是对象了，两次下标拿到的仍然和原结果一样。</li><li><code>$error</code> 是一个存放了错误信息字符串的数组。<sup><a href=#user-content-fn-3key7 aria-describedby=footnote-label data-footnote-ref="" id=user-content-fnref-3key7>8</a></sup> 不过，错误会直接输出，不符合「该程序运行后输出 Hello, World!, 有且仅有该内容，要求分毫不差」的要求。</li></ul><section class="footnotes" data-footnotes><h2 id="footnote-label" class="sr-only">脚注和参考文献</h2><ol><li id="user-content-fn-3psrank"><p>点击第 5 条规则中的链接查看。 <a href=#user-content-fnref-3psrank aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key1"><p><a href=https://community.idera.com/database-tools/powershell/powertips/b/tips/posts/converting-ascii-and-characters>Converting ASCII and Characters - Power Tips - Power Tips - IDERA Community</a> <a href=#user-content-fnref-3key1 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key2"><p><a href=https://stackoverflow.com/questions/50018274/why-does-invoke-operator-and-invoke-expression-produce-different-results-for>Why does invoke operator (&amp; and Invoke-Expression produce different results for the same input? - Stack Overflow)</a> <a href=#user-content-fnref-3key2 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key3"><p><a href=https://stackoverflow.com/questions/24754822/powershell-remove-item-0-from-an-array>PowerShell Remove item 0 from an array - Stack Overflow</a> <a href=#user-content-fnref-3key3 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key4"><p><a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7.2#section-1">$? - PowerShell Core - About - Automatic Variables</a> <a href=#user-content-fnref-3key4 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key5"><p><a href="https://docs.microsoft.com/en-us/powershell/scripting/lang-spec/chapter-06?view=powershell-7.2#64-conversion-to-integer">Conversion#Conversion to integer</a> <a href=#user-content-fnref-3key5 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key6"><p><a href=https://www.rlmueller.net/PowerShellEscape.htm>Escaping in PowerShell</a> <a href=#user-content-fnref-3key6 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li><li id="user-content-fn-3key7"><p><a href=https://www.tutorialspoint.com/what-is-use-of-error-variable-in-powershell>What is use of $error variable in PowerShell?</a> <a href=#user-content-fnref-3key7 aria-label=返回内容 class=data-footnote-backref data-footnote-backref="">↩︎</a></p></li></ol></section>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E7%BC%96%E7%A8%8B/">编程</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/PowerShell/">PowerShell</category>
      
      
      <comments>https://blog.xinshijiededa.men/three-keys-hello-world-in-powershell/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>几何光学的基本概念</title>
      <link>https://blog.xinshijiededa.men/geometric-optics/</link>
      <guid>https://blog.xinshijiededa.men/geometric-optics/</guid>
      <pubDate>Tue, 07 Mar 2023 15:29:00 GMT</pubDate>
      
        
        
      <description>&lt;head&gt;
&lt;meta charset=utf-8&gt;
&lt;link href=/_astro/index.2120b3d0.css rel=stylesheet /&gt;&lt;link href=/_astro/three-keys-hello-world-in-powershell.d</description>
        
      
      
      
      <content:encoded><![CDATA[<head><meta charset=utf-8><link href=/_astro/index.2120b3d0.css rel=stylesheet /><link href=/_astro/three-keys-hello-world-in-powershell.db3208af.css rel=stylesheet /></head><p>几何光学：</p><style>astro-island,astro-slot{display:contents}</style><script>var l;(self.Astro=self.Astro||{}).load=t=>{(async()=>{await(await t())()})()},window.dispatchEvent(new Event("astro:load"));{const t={0:t=>t,1:t=>JSON.parse(t,e),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(JSON.parse(t,e)),5:t=>new Set(JSON.parse(t,e)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(JSON.parse(t)),9:t=>new Uint16Array(JSON.parse(t)),10:t=>new Uint32Array(JSON.parse(t))},e=(e,s)=>{if(""===e||!Array.isArray(s))return s;const[r,i]=s;return r in t?t[r](i):void 0};customElements.get("astro-island")||customElements.define("astro-island",((l=class extends HTMLElement{constructor(){super(...arguments),this.hydrate=()=>{if(!this.hydrator||this.parentElement&&this.parentElement.closest("astro-island[ssr]"))return;const t=this.querySelectorAll("astro-slot"),s={},r=this.querySelectorAll("template[data-astro-template]");for(const t of r){const e=t.closest(this.tagName);!e||!e.isSameNode(this)||(s[t.getAttribute("data-astro-template")||"default"]=t.innerHTML,t.remove())}for(const e of t){const t=e.closest(this.tagName);!t||!t.isSameNode(this)||(s[e.getAttribute("name")||"default"]=e.innerHTML)}const i=this.hasAttribute("props")?JSON.parse(this.getAttribute("props"),e):{};this.hydrator(this)(this.Component,i,s,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),window.removeEventListener("astro:hydrate",this.hydrate),window.dispatchEvent(new CustomEvent("astro:hydrate"))}}connectedCallback(){!this.hasAttribute("await-children")||this.firstChild?this.childrenConnectedCallback():new MutationObserver(((t,e)=>{e.disconnect(),this.childrenConnectedCallback()})).observe(this,{childList:!0})}async childrenConnectedCallback(){window.addEventListener("astro:hydrate",this.hydrate);let t=this.getAttribute("before-hydration-url");t&&await import(t),this.start()}start(){const t=JSON.parse(this.getAttribute("opts")),e=this.getAttribute("client");void 0!==Astro[e]?Astro[e]((async()=>{const t=this.getAttribute("renderer-url"),[e,{default:s}]=await Promise.all([import(this.getAttribute("component-url")),t?import(t):()=>()=>{}]),r=this.getAttribute("component-export")||"default";if(r.includes(".")){this.Component=e;for(const t of r.split("."))this.Component=this.Component[t]}else this.Component=e[r];return this.hydrator=s,this.hydrate}),t,this):window.addEventListener(`astro:${e}`,(()=>this.start()),{once:!0})}attributeChangedCallback(){this.hydrator&&this.hydrate()}}).observedAttributes=["props"],l))}</script><astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Z2b8Wxp><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光线</astro-slot></span></astro-island>的概念为基础，用<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=ZsbRAo><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>几何</astro-slot></span></astro-island>的方法研究光在介质中的传播规律和光学系统成像特征．<p></p><h2 id="光波与光线">光波与光线</h2><p>光从本质上来就是<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=30reF><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>电磁波</astro-slot></span></astro-island>；光的传播实质上是<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=usth2><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>电磁波的传播</astro-slot></span></astro-island>．</p><h3 id="波长">波长</h3><p>红外线的波长比可见光<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=gj7fr><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>长</astro-slot></span></astro-island>；</p><p>紫外线的波长比可见光<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=LItJl><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>短</astro-slot></span></astro-island>．</p><p>光速、频率与波长的关系：</p><p><span class="math display">\[\nu=\dfrac c \lambda.\]</span></p><p>（不能写成其他形式）</p><h3 id="光源和光线">光源和光线</h3><p>光源（发光体）是<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=ZQPc6t><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>能够辐射光能量</astro-slot></span></astro-island>的物体．</p><p>光线是<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=22YD01><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>携带能量并带有方向</astro-slot></span></astro-island>的几何线．</p><p><astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Z2c4bO4><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光线的方向</astro-slot></span></astro-island>代表光的传播方向．</p><p><astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Zw7Tx1><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光线的传播途径</astro-slot></span></astro-island>称为光路．</p><h3 id="波面">波面</h3><p>光波向周围传播，在某一时刻，其振动位相相同的各点所构成的<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=18QTD2><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>等相位面</astro-slot></span></astro-island>称为波阵面，简称波面．可分为<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Z89V2D><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>平面波，球面波或任意曲面波</astro-slot></span></astro-island>．</p><p>在各向同性介质中，光沿着波面法线方向传播，所以可以认为<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=ZqpCEl><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光波波面法线</astro-slot></span></astro-island>就是几何光学中的光线．</p><p>波前（wavefront）: The surface reached by wave propagation at any time.</p><h2 id="基本定律">基本定律</h2><h3 id="光的直线传播定律">光的直线传播定律</h3><p>在<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Z8af7H><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>各向同性的均匀介质</astro-slot></span></astro-island>中，光线按直线传播．</p><h3 id="光线的独立传播定律">光线的独立传播定律</h3><p>光线的独立传播定律不符合<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Z2kKcJN><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光的干涉现象</astro-slot></span></astro-island>．</p><h3 id="光的折射和反射定律">光的折射和反射定律</h3><h4 id="折射定律">折射定律</h4><p>折射率越大，介质对光线的折射能力越强。如，空气的折射率约为 <span class="math inline">\(1.00\)</span>，水的折射率约为 <span class="math inline">\(1.33\)</span>，则光线从空气射入水中时，入射角 <span class="math inline">\(\geq\)</span> 折射角。</p><p>折射定律的公式：</p><p><span class="math display">\[n’\sin I’=n\sin I.\]</span></p><p>若在此式中令 <span class="math inline">\(n’=-n\)</span>，则有 <span class="math inline">\(I’=-I\)</span>，即反射定律．</p><h4 id="角的正负">角的正负</h4><p>由<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=Zytm3s><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光线转向法线</astro-slot></span></astro-island>，<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=KaEct><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>顺</astro-slot></span></astro-island>时针方向旋转形成的角度为正，反之为负．</p><p>在反射定律中，反射光线和入射光线位于法线的两侧，且反射角与入射角的绝对值相等，符号相反．</p><h4 id="全反射">全反射</h4><p>全反射现象发生的条件：</p><ol><li>光线从<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=1g5UuE><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光密</astro-slot></span></astro-island>介质射向<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=1l9ypd><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光疏</astro-slot></span></astro-island>介质；</li><li>入射角大于临界角．</li></ol><p>临界角 <span class="math inline">\(\sin I_m = \dfrac{n’\sin I’}{n} = \dfrac{n’}{n}\sin 90° = \dfrac{n’}{n}\)</span>，其中 <span class="math inline">\(n \gt n’\)</span>．</p><h3 id="马吕斯定律">马吕斯定律</h3><p>马吕斯定律（Theorem of Malus）是指光线束在各向同性的均匀介质中传播时，始终<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=5jjyc><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>保持着与波面的正交性</astro-slot></span></astro-island>，并且入射波面与出射波面对应点之间的<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=1N0Di0><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>光程</astro-slot></span></astro-island>为定值．</p><h3 id="费马原理">费马原理</h3><p>费马原理（Fermat’s principle）是指光是沿着光程为<astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=V0ibn><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>极值（极大、极小或常量）</astro-slot></span></astro-island>的路径传播的．</p><p><astro-island await-children="" client=load component-export=default component-url=/_astro/Cloze.8bebfe4b.js opts={&quot;name&quot;:{},&quot;value&quot;:true} props={} renderer-url=/_astro/client.c4e17359.js ssr="" uid=1BXHMo><span class="cloze svelte-dlyjmm mask">[...]</span><span class="cloze svelte-dlyjmm ans hidden"><astro-slot>折/反射定律、费马原理和马吕斯定律</astro-slot></span></astro-island>三者中的任意一个，均可以视为几何光学的一个基本定律，而把另外两个作为该基本定律的推论．</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%85%89%E5%AD%A6/">光学</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%A4%87%E5%BF%98/">备忘</category>
      
      
      <comments>https://blog.xinshijiededa.men/geometric-optics/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>如何方便地查看 Github Actions secrets</title>
      <link>https://blog.xinshijiededa.men/github-actions-secrets/</link>
      <guid>https://blog.xinshijiededa.men/github-actions-secrets/</guid>
      <pubDate>Thu, 02 Feb 2023 12:38:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在 GitHub 仓库 Settings 页面中设置的 Actions secrets and variables 是只能重新填写的。同时，在 Action 执行的 log 里所有 secrets 都会被星号打码。不过，可以通过创建一个 Action 来方便地查看我们设置的</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在 GitHub 仓库 Settings 页面中设置的 Actions secrets and variables 是只能重新填写的。同时，在 Action 执行的 log 里所有 secrets 都会被星号打码。不过，可以通过创建一个 Action 来方便地查看我们设置的 token。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">View</span> <span class="string">GitHub</span> <span class="string">Actions</span> <span class="string">secrets</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">master</span>]</span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line">  <span class="comment"># 可以在仓库的 Actions 页面中手动触发</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">github-actions-environment-variables-ubuntu:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Get</span> <span class="string">env</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">env</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Transfer</span> <span class="string">secrets</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">&quot;echo &#x27;Token XXXX: $<span class="template-variable">&#123;&#123;secrets.XXXX&#125;&#125;</span>&#x27; | curl -T - https://ppng.io/自己设定的一段口令&quot;</span></span><br></pre></td></tr></table></figure><p>在你的设备上运行 <code>curl https://ppng.io/自己设定的一段口令</code> 后再运行上述 action 就可以看到啦。</p>]]></content:encoded>
      
      
      
      <category domain="https://blog.xinshijiededa.men/tags/GitHub/">GitHub</category>
      
      
      <comments>https://blog.xinshijiededa.men/github-actions-secrets/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>你不应该使用的 Python 文件名</title>
      <link>https://blog.xinshijiededa.men/python-filenames-you-should-avoid/</link>
      <guid>https://blog.xinshijiededa.men/python-filenames-you-should-avoid/</guid>
      <pubDate>Mon, 16 Jan 2023 06:58:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在新 VPS 上运行 Python 程序的时候出现了问题：&lt;a href=&quot;https://pdm.fming.dev/latest/&quot;&gt;&lt;code&gt;pdm&lt;/code&gt;&lt;/a&gt; 无法正常 install 或者设置 config，&lt;code&gt;poetry&lt;/code&gt; 可以</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在新 VPS 上运行 Python 程序的时候出现了问题：<a href="https://pdm.fming.dev/latest/"><code>pdm</code></a> 无法正常 install 或者设置 config，<code>poetry</code> 可以但是无法正常运行。两者都在获取运行环境的时候发生了同样的错误。以下是一个最小复现例子：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[neko@host temp]$ <span class="built_in">ls</span></span><br><span class="line">select.py</span><br><span class="line">[neko@host temp]$ <span class="built_in">cat</span> select.py</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello, world!&quot;</span>)</span><br><span class="line">[neko@host temp]$ python</span><br><span class="line">Python 3.10.9 (main, Dec 19 2022, 17:35:49) [GCC 12.2.0] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import platform</span><br><span class="line">hello, world!</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/subprocess.py&quot;</span>, line 69, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import msvcrt</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">&#x27;msvcrt&#x27;</span></span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line 1, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/platform.py&quot;</span>, line 119, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import subprocess</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/subprocess.py&quot;</span>, line 76, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import selectors</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/selectors.py&quot;</span>, line 291, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    class SelectSelector(_BaseSelectorImpl):</span><br><span class="line">  File <span class="string">&quot;/usr/lib/python3.10/selectors.py&quot;</span>, line 318, <span class="keyword">in</span> SelectSelector</span><br><span class="line">    _select = select.select</span><br><span class="line">AttributeError: module <span class="string">&#x27;select&#x27;</span> has no attribute <span class="string">&#x27;select&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>我一 Linux 怎么会需要 <code>msvcrt</code>？一开始以为是 Arch 仓库里的 Python 有问题，或者是 <code>pip</code> 安装的时候在 root 用户操作而破坏了系统，但是重装了几次全部依赖也没有解决。排查许久后，发现只有在我的代码文件夹里进入 REPL <code>import platform</code> 会报错。然后发现项目里用的一个模块的名称叫 <code>select.py</code>。是的，导入 Python 内置的 <a href="https://docs.python.org/3/library/index.html">标准库 <i class="fa-brands fa-python"></i></a> 的时候，<strong>标准库内部的 <code>import</code> 也是在当前工作目录下进行的</strong>（！）。</p><p>最末的结论是，你不应该使用以下名称作为 Python 代码的文件/模块名：</p><p><code>abc</code>, <code>aifc</code>, <code>argparse</code>, <code>array</code>, <code>ast</code>, <code>asyncio</code>, <code>atexit</code>, <code>audioop</code>, <code>base64</code>, <code>bdb</code>, <code>binascii</code>, <code>bisect</code>, <code>builtins</code>, <code>bz2</code>, <code>calendar</code>, <code>cgi</code>, <code>cgitb</code>, <code>chunk</code>, <code>cmath</code>, <code>cmd</code>, <code>code</code>, <code>codecs</code>, <code>codeop</code>, <code>collections</code>, <code>colorsys</code>, <code>compileall</code>, <code>concurrent</code>, <code>configparser</code>, <code>contextlib</code>, <code>contextvars</code>, <code>copy</code>, <code>copyreg</code>, <code>csv</code>, <code>ctypes</code>, <code>dataclasses</code>, <code>datetime</code>, <code>dbm</code>, <code>decimal</code>, <code>difflib</code>, <code>dis</code>, <code>doctest</code>, <code>email</code>, <code>ensurepip</code>, <code>enum</code>, <code>errno</code>, <code>faulthandler</code>, <code>filecmp</code>, <code>fileinput</code>, <code>fnmatch</code>, <code>fractions</code>, <code>ftplib</code>, <code>functools</code>, <code>gc</code>, <code>getopt</code>, <code>getpass</code>, <code>gettext</code>, <code>glob</code>, <code>graphlib</code>, <code>gzip</code>, <code>hashlib</code>, <code>heapq</code>, <code>hmac</code>, <code>html</code>, <code>http</code>, <code>imaplib</code>, <code>imghdr</code>, <code>imp</code>, <code>importlib</code>, <code>inspect</code>, <code>io</code>, <code>ipaddress</code>, <code>itertools</code>, <code>json</code>, <code>keyword</code>, <code>linecache</code>, <code>locale</code>, <code>logging</code>, <code>lzma</code>, <code>mailbox</code>, <code>mailcap</code>, <code>marshal</code>, <code>math</code>, <code>mimetypes</code>, <code>mmap</code>, <code>modulefinder</code>, <code>msilib</code>, <code>msvcrt</code>, <code>multiprocessing</code>, <code>netrc</code>, <code>nntplib</code>, <code>numbers</code>, <code>operator</code>, <code>optparse</code>, <code>os</code>, <code>pathlib</code>, <code>pdb</code>, <code>pickle</code>, <code>pickletools</code>, <code>pipes</code>, <code>pkgutil</code>, <code>platform</code>, <code>plistlib</code>, <code>poplib</code>, <code>pprint</code>, <code>profile</code>, <code>py_compile</code>, <code>pyclbr</code>, <code>pydoc</code>, <code>pyexpat</code>, <code>queue</code>, <code>quopri</code>, <code>random</code>, <code>re</code>, <code>reprlib</code>, <code>rlcompleter</code>, <code>runpy</code>, <code>sched</code>, <code>secrets</code>, <code>select</code>, <code>selectors</code>, <code>shelve</code>, <code>shlex</code>, <code>shutil</code>, <code>signal</code>, <code>site</code>, <code>smtplib</code>, <code>sndhdr</code>, <code>socket</code>, <code>socketserver</code>, <code>sqlite3</code>, <code>ssl</code>, <code>stat</code>, <code>statistics</code>, <code>string</code>, <code>stringprep</code>, <code>struct</code>, <code>subprocess</code>, <code>sunau</code>, <code>symtable</code>, <code>sys</code>, <code>sysconfig</code>, <code>tabnanny</code>, <code>tarfile</code>, <code>telnetlib</code>, <code>tempfile</code>, <code>test</code>, <code>textwrap</code>, <code>threading</code>, <code>time</code>, <code>timeit</code>, <code>tkinter</code>, <code>token</code>, <code>tokenize</code>, <code>tomllib</code>, <code>trace</code>, <code>traceback</code>, <code>tracemalloc</code>, <code>turtle</code>, <code>types</code>, <code>typing</code>, <code>unicodedata</code>, <code>unittest</code>, <code>urllib</code>, <code>uu</code>, <code>uuid</code>, <code>venv</code>, <code>warnings</code>, <code>wave</code>, <code>weakref</code>, <code>webbrowser</code>, <code>winreg</code>, <code>winsound</code>, <code>wsgiref</code>, <code>xdrlib</code>, <code>xml</code>, <code>xmlrpc</code>, <code>zipapp</code>, <code>zipfile</code>, <code>zipimport</code>, <code>zlib</code>, <code>zoneinfo</code> 🐍</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/Python/">Python</category>
      
      
      
      <comments>https://blog.xinshijiededa.men/python-filenames-you-should-avoid/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PBRT 笔记：1. 绪论</title>
      <link>https://blog.xinshijiededa.men/pbrt-introduction/</link>
      <guid>https://blog.xinshijiededa.men/pbrt-introduction/</guid>
      <pubDate>Sat, 14 Jan 2023 19:33:40 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20166026/212490756-206ba1cd-4ef7-4a25-90fe-502279a37ddf.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;本文为《基于物理的渲染：从理</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/20166026/212490756-206ba1cd-4ef7-4a25-90fe-502279a37ddf.png" /></p><p>本文为《基于物理的渲染：从理论到实现》第三版第一章的笔记．此书通过结合具体的软件（pbrt）代码，讲解光线追踪的实现．</p><h1 id="相关资源">相关资源</h1><p>本书的 <a href="https://www.pbrt.org/">官方网站</a>．你可以在 <a href="https://www.pbr-book.org/">这里</a> 免费阅读第三版（英文），或者在 <a href="https://github.com/kanition/pbrtbook">这里</a> 免费下载第三版（中文）的 PDF（目前翻译进度到第八章）．你也可以购买清华大学出版社翻译的《物理渲染：从理论到实现（第二版）》纸质书（ISBN <code>9787302449812</code>），不过价格不菲．</p><p><code>pbrt-v3</code> 是原书作者的 C++ 实现，代码在 <a href="https://github.com/mmp/pbrt-v3">GitHub</a>．</p><p><code>rs_pbrt</code> 是一个 Rust 的 pbrt-v3 实现，不过目前还有多处待完成，缺少一些功能．不过 Rust 有统一的构建环境和更好的开发体验．你可以看看其 <a href="https://github.com/wahn/rs_pbrt">GitHub 仓库</a> 和 <a href="https://www.rs-pbrt.org/">网站</a>．</p><p>本文末尾附有简明的编译和使用教程．</p><h1 id="第一章绪论">第一章：绪论</h1><p><strong>渲染</strong>（rendering）是由 3D <strong>场景</strong>（scene）描述生成图像的过程．<strong>基于物理的</strong>（physically based）渲染运用物理学规律对光与物质的相互作用建模．</p><p>长期以来，<strong>实时</strong>（real-time）渲染主要采用<strong>栅格化</strong>（rasterization）或栅格化+<strong>光线追踪</strong>（ray-tracing），而本书中完全采用光线追踪．</p><h2 id="文学编程">1.1 文学编程</h2><p>讲解书中伪代码的表示方法<strong>文学编程</strong>（literate programming）．</p><p>不认可这种表示方法，即便想法很好——作为教学用的代码不能过长，但是这样代码支离破碎．为了便于理解，应该提供更小更快、能即时查看到效果的教科书．官方的电子版很好，可以展开折叠的代码，而不是在页内跳来跳去．</p><p>Jupyter Notebook 应是一个更好的 literate programming．</p><h2 id="逼真渲染和光线追踪算法">1.2 逼真渲染和光线追踪算法</h2><h3 id="相机">1.2.1 相机</h3><p>针孔相机也可以看作是把胶片平面放置在针孔的前方但距离不变——出于仿真目的，可以将胶片放在<strong>视见体</strong>（viewing volume）位置．视见体、小孔、胶片构成一个双锥体．</p><p>incident light 是「入射光」的意思．</p><h3 id="光线-物体相交">1.2.2 光线-物体相交</h3><h4 id="交点信息">交点信息</h4><p>将射线 <span class="math inline">\(\boldsymbol{r}\)</span> 写成参数形式：</p><p><span class="math display">\[{\boldsymbol r}(t)={\boldsymbol o}+t{\boldsymbol d},\]</span></p><p>其中 <span class="math inline">\({\boldsymbol o}\)</span> 是射线端点， <span class="math inline">\({\boldsymbol d}\)</span> 是其方向向量， <span class="math inline">\(t\)</span> 是定义在 <span class="math inline">\((0,\infty)\)</span> 的参数．</p><p>由隐函数 <span class="math inline">\(F(x,y,z)=0\)</span> 定义曲面．将曲面的隐式方程代入射线方程即可求得交点．如果没有正根，则射线与球面错开了；如果有，则最小正根给出了交点．</p><h4 id="该点的特定属性">该点的特定属性</h4><p>除交点外，光线追踪器还需知道如曲面法线 <span class="math inline">\(\boldsymbol n\)</span> 等额外信息以<strong>着色</strong>（shade）．</p><h4 id="加速结构">加速结构</h4><p><strong>加速结构</strong>（acceleration structure）可使时间复杂度降为 <span class="math inline">\(O(I\log N)\)</span> ，其中 <span class="math inline">\(I\)</span> 是图像像素数目， <span class="math inline">\(N\)</span> 是场景中物体的数量．</p><h3 id="光的分布">1.2.3 光的分布</h3><p>围绕光源的单位球面在单位面积上的功率为 <span class="math inline">\(\displaystyle\frac{\varPhi}{4\mathrm{\pi}}\)</span> ．</p><p>到达半径为 <span class="math inline">\(r\)</span> 的球面上一点的单位面积功率 <span class="math inline">\(\propto\dfrac{1}{r^2}\)</span> ．</p><p>光源若与法线有夹角， <span class="math inline">\(\mathrm dA\)</span> 上积累的功率 <span class="math inline">\(\propto\cos\theta\)</span> ．</p><p>综上所述，单位面积上的<strong>辐射照度</strong>（differential irradiance） <span class="math inline">\(\mathrm{d}E\)</span> 为</p><p><span class="math display">\[\mathrm{d}E=\frac{\varPhi\cos\theta}{4\mathrm{\pi}r^2}.\]</span></p><h3 id="可见性">1.2.4 可见性</h3><p>若有阴影遮挡着色点，光源路径不畅通时不会照亮该点．通过 <strong>阴影射线</strong>（shadow ray）可判断是否可见．方法是 简单构造一条新射线，其端点是表面上的点，方向指向光源，如下图中虚线所示．</p><figure><img src="https://user-images.githubusercontent.com/20166026/212490274-ddae7a7e-2e5c-4088-b337-cff00ea9808d.svg" alt="" /><figcaption>递归式的光线追踪</figcaption></figure><blockquote><p>图片来源为 闫令琪．<strong><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">GAMES101: 现代计算机图形学入门</a></strong>．Lecture 13 <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_13.pdf">光线追踪（基本原理）[pdf]</a></p></blockquote><h3 id="表面散射">1.2.5 表面散射</h3><p>为着色我们还需确定入射光如何<strong>被散射</strong>（scattered）．物体的材质由<strong>双向反射分布函数</strong>（bidirectional reflectance distribution function，<strong>BRDF</strong>）描述．该函数告诉我们从<strong>入射</strong>（incoming）方向 <span class="math inline">\({\boldsymbol \omega}_\mathrm{i}\)</span> 到<strong>出射</strong>（outgoing）方向 <span class="math inline">\({\boldsymbol \omega}_\mathrm o\)</span> 会反射多少能量．</p><p>我们把 <span class="math inline">\(\boldsymbol p\)</span> 处的 BRDF 写作 <span class="math inline">\(f_{\mathrm{r}}({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o},{\boldsymbol \omega}_\mathrm{i})\)</span> ．</p><h3 id="间接光传输">1.2.6 间接光传输</h3><p>从物体上一点到达相机的光量由物体的发光量（如果它自己就是光源）与反射光量之和决定．它被形式化为<strong>光传输方程</strong>（light transport equation），表示从点 <span class="math inline">\(\boldsymbol p\)</span> 沿方向 <span class="math inline">\({\boldsymbol \omega}_\mathrm{o}\)</span> 的出射辐亮度 <span class="math inline">\(L_{\mathrm{o}}({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o})\)</span> 等于该点沿该方向的发光亮度加上点 <span class="math inline">\(\boldsymbol p\)</span> 的邻域球面 <span class="math inline">\(S^2\)</span> 所有方向上经 BSDF <span class="math inline">\(f({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o},{\boldsymbol \omega}_\mathrm{i})\)</span> 和余弦项调制的入射亮度：</p><p><span class="math display">\[L_{\mathrm o}({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o})=L_{\mathrm e}({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o})+\int_{S^2}f({\boldsymbol p},{\boldsymbol \omega}_\mathrm{o},{\boldsymbol \omega}_\mathrm{i})L_{\mathrm i}({\boldsymbol p},{\boldsymbol \omega}_\mathrm{i})|\cos{\theta_{\mathrm i} }| \,\mathrm{d}{\boldsymbol \omega}_\mathrm{i}\]</span></p><p>Whitted 算法把积分变为少量方向上的求和，故可以扩展到实现镜面和玻璃外的更多效果．</p><h3 id="光线传播">1.2.7 光线传播</h3><p>在非真空中存在如烟、雾、尘等<strong>介质</strong>（participating media）．</p><h4 id="熄灭衰减">熄灭（衰减）</h4><p>介质可以通过吸收或沿不同方向散射来<strong>熄灭</strong>（extinguish）aka. <strong>衰减</strong>（attenuate）光．</p><p>需要计算射线与交点之间的<strong>透射率</strong>（transmittance） <span class="math inline">\(T\)</span> ．</p><h4 id="增强">增强</h4><p>介质也可以沿路线增强光．在介质发光（例如火焰）或从其他方向把光散射回该射线时可发生该现象．</p><p>可以通过数值计算<strong>体积光传输方程</strong>（volume light transport equation）来寻求该量，该方法还能计算光传输方程求得从表面反射回的光量．</p><h2 id="pbrt系统概述">1.3 pbrt：系统概述</h2><h3 id="执行阶段">1.3.1 执行阶段</h3><p>pbrt 在概念上可分为两个执行阶段．</p><p>首先解析场景描述文件， 最终结果 是 <code>Scene</code> 和 <code>Integrator</code> 的实例，后者实现了渲染前者的算法，被称为积分器主要是计算 1.2.6 节中式的积分．</p><p>然后执行渲染主循环，由 <code>Integrator::Render()</code> 执行．</p><h3 id="场景表示">1.3.2 场景表示</h3><p>程序首先解析命令行参数并 parse 场景描述文件，<code>rs_pbrt</code> 的这部分代码在 <code>rs_pbrt</code> 的 <code>parse_file</code> 中．然后 就创建表示场景中光源和几何图元的对象．这两者都储存在 <code>Scene</code> 对象中．</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">struct</span> <span class="title class_">Scene</span> &#123;</span><br><span class="line">    <span class="keyword">pub</span> lights: <span class="type">Vec</span>&lt;Arc&lt;Light&gt;&gt;,</span><br><span class="line">    <span class="keyword">pub</span> infinite_lights: <span class="type">Vec</span>&lt;Arc&lt;Light&gt;&gt;,</span><br><span class="line">    <span class="keyword">pub</span> aggregate: Arc&lt;Primitive&gt;,</span><br><span class="line">    <span class="keyword">pub</span> world_bound: Bounds3f,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C++ 的 <code>shared_ptr</code> 对应的就是 <code>Arc</code>：</p><blockquote><p>A thread-safe reference-counting pointer. 'Arc' stands for 'Atomically Reference Counted'.</p></blockquote><h4 id="光源">光源</h4><p>场景中每个光源都由Light对象表示，指定灯光的形状和发射能量的分布．</p><h4 id="几何对象">几何对象</h4><p>场景中每个几何对象都由Primitive表示，由几何结构 <code>Shape</code> 和外观描述 <code>Material</code> 组成．他们都储存在 Primitive 中： <figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="keyword">enum</span> <span class="title class_">Primitive</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">Geometric</span>(<span class="type">Box</span>&lt;GeometricPrimitive&gt;),</span><br><span class="line">    <span class="title function_ invoke__">Transformed</span>(<span class="type">Box</span>&lt;TransformedPrimitive&gt;),</span><br><span class="line">    <span class="title function_ invoke__">BVH</span>(<span class="type">Box</span>&lt;BVHAccel&gt;),</span><br><span class="line">    <span class="title function_ invoke__">KdTree</span>(<span class="type">Box</span>&lt;KdTreeAccel&gt;),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个聚合体是一种特殊的图元，它自己持有许多对其他图元的引用．聚合体的实现用加速的数据结构存储了所有场景图元，减少对远离给定光线的图元做不必要的光线相交测试量．</p><h3 id="积分器接口与采样积分器">1.3.3 积分器接口与采样积分器</h3><p><strong>积分器</strong>（integrator）用于计算场景照明的一组测量值．<code>Integrator</code> 提供 <code>render()</code> 方法，接收一个 <code>&amp;Scene</code>．其中一种实现是<code>SamplerIntegrator</code>，它是由来自 <code>Sampler</code> 的<strong>样本</strong>（sample）流驱动的，每个样本标识了图像上的一点，用于计算到达该点以构成图像的光量．</p><p>采样器的实现会极大影响系统生成图像的质量．它责选取光线要追踪的图像平面上的点，并且提供 1.2.6 节公式中所需的采样位置．</p><h3 id="主渲染循环">1.3.4 主渲染循环</h3><figure><img src="https://user-images.githubusercontent.com/20166026/212491991-3ba3c837-aa92-41b7-b941-69e49cd64865.svg" alt="" /><figcaption>流程示意图</figcaption></figure><p>为了并行化，图像会被分成图块，每个图块可并行独立处理．pbrt 固定使用 <span class="math inline">\(16 \times 16\)</span> 的图块，这个<strong>粒度</strong>（granularity）对绝大多数图像都适用．</p><p>(C++) <code>Li()</code> 需要为每次辐亮度计算临时分配少量内存，所以我们会用一个 <code>MemoryArena</code> 实例管理内存池以启用比标准库例程更高性能的分配．</p><h3 id="whitted-光线追踪积分器">1.3.5 Whitted 光线追踪积分器</h3><p>Whitted 积分器工作时递归地计算沿反射和折射光线方向的辐亮度．还是刚才这张图：</p><figure><img src="https://user-images.githubusercontent.com/20166026/212490274-ddae7a7e-2e5c-4088-b337-cff00ea9808d.svg" alt="" /><figcaption>递归式的光线追踪</figcaption></figure><p>对于每个光源，积分器调用方法 <code>Light::sample_li()</code>计算从该光源落到表面上待着色点的辐亮度．</p><h2 id="pbrt-的并行化">1.4 pbrt 的并行化</h2><p>当执行多线程访问共享可改数据时它们必须以某种方式 <strong>同步</strong>（synchronize）其访问，即为<strong>互斥</strong>（mutual exclusion）和<strong>原子操作</strong>（atomic operation）．</p><h3 id="互斥">互斥</h3><p>pbrt 采用 <code>std::mutex</code> 对象实现互斥．至于 C++ 中使用 mutex 的方法，需要声明一个值和一个 mutex，修改值时创建一个 <code>std::lock_guard&lt;std::mutex&gt;</code>，该锁会在 drop 时自动释放．cppreference.com <a href="https://en.cppreference.com/w/cpp/thread/lock_guard#Example">给出了</a> 简明的例子，我将其贴在下方：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> g_i = <span class="number">0</span>;</span><br><span class="line">std::mutex g_i_mutex;  <span class="comment">// protects g_i</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">safe_increment</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="type">const</span> std::lock_guard&lt;std::mutex&gt; <span class="title">lock</span><span class="params">(g_i_mutex)</span></span>;</span><br><span class="line">    ++g_i;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;g_i: &quot;</span> &lt;&lt; g_i &lt;&lt; <span class="string">&quot;; in thread #&quot;</span></span><br><span class="line">              &lt;&lt; std::this_thread::<span class="built_in">get_id</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="comment">// g_i_mutex is automatically released when lock</span></span><br><span class="line">    <span class="comment">// goes out of scope</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;g_i: &quot;</span> &lt;&lt; g_i &lt;&lt; <span class="string">&quot;; in main()\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">std::thread <span class="title">t1</span><span class="params">(safe_increment)</span></span>;</span><br><span class="line">    <span class="function">std::thread <span class="title">t2</span><span class="params">(safe_increment)</span></span>;</span><br><span class="line"></span><br><span class="line">    t1.<span class="built_in">join</span>();</span><br><span class="line">    t2.<span class="built_in">join</span>();</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;g_i: &quot;</span> &lt;&lt; g_i &lt;&lt; <span class="string">&quot;; in main()\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="原子操作">原子操作</h3><p>C++ 中使用 <code>std::atomic</code> 完成原子操作．简单的例子如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::atomic&lt;<span class="type">int</span>&gt; <span class="title">x</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">++x;</span><br></pre></td></tr></table></figure><h2 id="如何继续阅读本书">1.5 如何继续阅读本书</h2><p>前面的铺垫也太长了，还是过于详细了……</p><h2 id="使用和理解代码">1.6 使用和理解代码</h2><p>传递 <code>mullptr</code> 来表示参数不可用或不该用，此时总是使用指针．</p><p>在当下 CPU 架构上最慢的数运算是除法、平方根和三角函数．</p><h2 id="基于物理的渲染简史">1.7 基于物理的渲染简史</h2><blockquote><p>基于物理的蒙特卡罗渲染方法成功用于制作的一大原因是它们最终提高了艺术家们的生产力．通过调整采样次数来快速获取缩略图；采用能量未必守恒的反射模型时反射参数可能需要在每个光照环境下都要调整； 光线追踪计算的阴影质量比栅格化方法好得多．</p></blockquote><h2 id="扩展阅读">1.8 扩展阅读</h2><p>无重要内容．</p><h1 id="编译和运行">编译和运行</h1><p>书中为 <code>pbrt-v3</code> 提供的场景文件在此 <a href="https://pub-49ca6a23a58a46ef9cf5a5b34413a7ba.r2.dev/pbrt-v3-scenes.tar.gz">3.7 GB tar.gz 文件</a> 中．<code>images</code> 里有渲染好的图像．</p><h3 id="在-windows-上安装和使用-c-pbrt-v3">在 Windows 上安装和使用 C++ <code>pbrt-v3</code></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scoop install cmake</span><br><span class="line">git clone <span class="literal">--recursive</span> <span class="string">&quot;https://github.com/mmp/pbrt-v3/&quot;</span> <span class="literal">--depth</span>=<span class="number">1</span></span><br><span class="line"><span class="built_in">cd</span> pbrt<span class="literal">-v3</span></span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br></pre></td></tr></table></figure><p>若成功，则会有一 <code>.sln</code> 文件。用 Visual Studio 打开，构建 <code>BUILD_ALL</code>。若编译成功，则会提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">30&gt;spectrum.cpp</span><br><span class="line">30&gt;正在生成代码...</span><br><span class="line">30&gt;pbrt_test.vcxproj -&gt; …\pbrt-v3\build\Release\pbrt_test.exe</span><br><span class="line">30&gt;已完成生成项目“pbrt_test.vcxproj”的操作．</span><br><span class="line">34&gt;------ 已启动生成: 项目: ALL_BUILD, 配置: Release x64 ------</span><br><span class="line">34&gt;Building Custom Rule …/pbrt-v3/CMakeLists.txt</span><br><span class="line">========== “生成”: 34 成功，0 失败，0 更新，0 已跳过 ==========</span><br></pre></td></tr></table></figure><p>可以在 <code>build</code> 目录下的 <code>Release</code>（或 <code>Debug</code>）文件夹中找到 <code>pbrt.exe</code>．</p><h3 id="使用-rs_pbrt-渲染文件">使用 <code>rs_pbrt</code> 渲染文件</h3><p>我先 <code>cargo build -r</code> 进行 release build，然后通过 <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\code\rs_pbrt\target\release\rs_pbrt.exe <span class="string">&quot;E:\downloads\pbrt-v3-scenes\killeroos\killeroo-simple.pbrt&quot;</span></span><br></pre></td></tr></table></figure></p><p>绝对路径使用会报错．其原因是 <code>.pbrt</code> 文件中有 <code>Include</code> 语句，在 <code>Include "geometry/killeroo.pbrt"</code> 时遇到相对路径，拼接的 parent 目录为 <code>env::current_dir()</code>．<code>cd</code> 到 <code>pbrt-v3-scenes/killeroos/</code>，参数填写绝对路径依然会有路径拼接错误．解决方法是填写相对路径．</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">❯ E:\downloads\pbrt-v3-scenes\killeroos&gt; E:\code\rs_pbrt\target\release\rs_pbrt.exe <span class="string">&quot;killeroo-simple.pbrt&quot;</span></span><br><span class="line">pbrt version 0.9.8 (unknown) [Detected 24 cores]</span><br><span class="line">Copyright (c) 2016-2022 Jan Douglas Bert Walter.</span><br><span class="line">Rust code based on C++ code by Matt Pharr, Greg Humphreys, and Wenzel Jakob.</span><br><span class="line">opening file FILE = killeroo-simple.pbrt</span><br><span class="line">Film <span class="string">&quot;image&quot;</span></span><br><span class="line"><span class="string">&quot;string filename&quot;</span> [<span class="string">&quot;killeroo-simple.exr&quot;</span>]</span><br><span class="line"><span class="string">&quot;integer xresolution&quot;</span> [700]</span><br><span class="line"><span class="string">&quot;integer yresolution&quot;</span> [700]</span><br><span class="line">Sampler <span class="string">&quot;sobol&quot;</span></span><br><span class="line"><span class="string">&quot;integer pixelsamples&quot;</span> [64]</span><br><span class="line">Integrator <span class="string">&quot;directlighting&quot;</span></span><br><span class="line">Include <span class="string">&quot;E:\\downloads\\pbrt-v3-scenes\\killeroos\\geometry/killeroo.pbrt&quot;</span></span><br><span class="line">opening file FILE = E:\downloads\pbrt-v3-scenes\killeroos\geometry/killeroo.pbrt</span><br><span class="line">Include <span class="string">&quot;E:\\downloads\\pbrt-v3-scenes\\killeroos\\geometry/killeroo.pbrt&quot;</span></span><br><span class="line">opening file FILE = E:\downloads\pbrt-v3-scenes\killeroos\geometry/killeroo.pbrt</span><br><span class="line">Integrator <span class="string">&quot;directlighting&quot;</span></span><br><span class="line">Rendering with 24 thread(s) ...</span><br><span class="line">1936 / 1936 [======================================================================================================================================] 100.00 % 14.81/s</span><br><span class="line">Writing image <span class="string">&quot;pbrt.png&quot;</span> with bounds Bounds2i &#123; p_min: Point2i &#123; x: 0, y: 0 &#125;, p_max: Point2i &#123; x: 700, y: 700 &#125; &#125; 26.76 % 36.11/s 39s</span><br></pre></td></tr></table></figure><p>渲染的图片在当前工作目录下．</p><figure><img src="https://user-images.githubusercontent.com/20166026/211073342-7fc95879-c72a-470a-ba17-b666a3e687c9.png" alt="" /><figcaption>渲染图 pbrt.png</figcaption></figure>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">读书笔记</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/">光线追踪</category>
      
      
      <comments>https://blog.xinshijiededa.men/pbrt-introduction/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>我的浏览器地址栏中的 A – Z（2022）</title>
      <link>https://blog.xinshijiededa.men/browser-address-bar-2022/</link>
      <guid>https://blog.xinshijiededa.men/browser-address-bar-2022/</guid>
      <pubDate>Fri, 13 Jan 2023 07:24:41 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;数据截止到 2022 年 12 月 3 日，原记载于 Logseq。写这个是由 &lt;a href=&quot;https://orzfly.com/html/my-browser-address-bar-2021.html&quot;&gt;此文章&lt;/a&gt; 启发。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;stro</description>
        
      
      
      
      <content:encoded><![CDATA[<p>数据截止到 2022 年 12 月 3 日，原记载于 Logseq。写这个是由 <a href="https://orzfly.com/html/my-browser-address-bar-2021.html">此文章</a> 启发。</p><ul><li><strong>A</strong>rchive.ph</li><li><strong>B</strong>aidu.com</li><li><strong>C</strong>alendar.google.com</li><li><strong>D</strong>eepl.com</li><li><strong>E</strong><span class="redacted">[内网地址，数据删除]</span></li><li><strong>F</strong>lypy.com</li><li><strong>G</strong><span class="redacted">[内网地址，数据删除]</span></li><li><strong>H</strong>kuri.cneas.tohoku.ac.jp/project1/manchu/list?groupId=11</li><li><strong>I</strong>course163.org</li><li><strong>J</strong><span class="redacted">[内网地址，数据删除]</span></li><li><strong>K</strong>ns.cnki.net/kns8/defaultresult/index</li><li><strong>L</strong>eetcode.com</li><li><strong>M</strong>astodon.social</li><li><strong>N</strong>otion.so</li><li><strong>O</strong>3o.ca</li><li><strong>P</strong>ortal.office.com</li><li><strong>Q</strong><span class="redacted">[数据删除]</span>.github.io</li><li><strong>R</strong>everso.net/文字翻译</li><li><strong>S</strong><span class="redacted">[内网地址，数据删除]</span></li><li><strong>T</strong>witter.com/home</li><li><strong>U</strong>.unipus.cn</li><li><strong>V</strong>2ex.com</li><li><strong>W</strong>olframalpha.com</li><li>blog.<strong>X</strong>inshijiededa.men</li><li><strong>Y</strong>outube.com/watch?v=<span class="redacted">[数据删除]</span></li><li><strong>Z</strong>hihu.com</li></ul><style>.redacted {    color: #bbb;    background-color: #555;    margin-left: 2px;    margin-right: 2px;    padding-left: 2px;    padding-right: 2px;    user-select: none;    transition: color 0.15s ease-out;}.redacted:hover {    color: #fff;}.post-body > ul > li {    font-family: monospace;    font-size: 120%;}</style>]]></content:encoded>
      
      
      
      
      <comments>https://blog.xinshijiededa.men/browser-address-bar-2022/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2022 Wrapped</title>
      <link>https://blog.xinshijiededa.men/2022/</link>
      <guid>https://blog.xinshijiededa.men/2022/</guid>
      <pubDate>Mon, 02 Jan 2023 18:55:28 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/20166026/210268661-2915a301-be4b-477a-94a7-b603470d0044.jpg&quot; /&gt;&lt;/p&gt;
&lt;p&gt;每到年底，各种网站或应用的年</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/20166026/210268661-2915a301-be4b-477a-94a7-b603470d0044.jpg" /></p><p>每到年底，各种网站或应用的年度总结接踵而来，今年尤其地多，似乎一年的生活完全可以用统计数据来概括。但是也没有心情，抑或是勇气，像我看到的其他许多博主一样，直面过去的一年，写一些类似 <a href="https://matters.news/@hi176/355892-2022-%E9%A6%AC%E7%89%B9%E5%B8%82%E5%B9%B4%E5%BA%A6%E5%95%8F%E5%8D%B7-10-%E5%80%8B%E5%95%8F%E9%A1%8C-%E8%AB%8B%E5%9B%9E%E7%AD%94-2022-bafybeieapn6vb2h7srvnr2rrexpknskha73z6dppir7br7rwy4cllcbxjy">馬特市年度問卷</a> 的回想。或许是没到合适的时间，或许是没有合适的内容……无妨。让巨细靡遗的数据来说话吧。</p><h2 id="多邻国">多邻国</h2><p>在 2022 年，我学习了🇰🇷韩语、🇩🇪德语等 13 种语言，共计学习了 <i class="fa-solid fa-hourglass-start"></i> 1572 分钟，习得了 <i class="fa-solid fa-arrow-down-a-z"></i> 988 个单词，练习了 <i class="fa-solid fa-align-center"></i> 2585 个句子，坚持了 128 天的 🔥 streak；获得了 5936 经验，全球排名前 8%。</p><p><b><i class="fa-solid fa-circle-info"></i> 详细信息，请看 <a href="/2022/duolingo.html">我的年度报告</a>。</b></p><h2 id="steam">Steam</h2><p>在 2022 年，我玩了 <i class="fa-solid fa-gamepad"></i> 14 款游戏，解锁了 <i class="fa-solid fa-star"></i> 64 项成就。玩的时间最长的是《八方旅人》，占全部游戏时间的 61%，启动了 <i class="fas fa-play-circle"></i> 88 次会话。我还在 <i class="fa-solid fa-city"></i> 夜之城流连了许久，也意识到 <i class="fa-solid fa-cat"></i> 猫比人好。</p><p><b><i class="fa-solid fa-circle-info"></i> 详细信息，请看 <a href="/2022/steam.html">我的 2022 年 STEAM 回顾</a>。</b></p><h2 id="力扣lcus">力扣（LCUS）</h2><p>在 2022 年，我连续 124 天完成了🔥<ruby>力扣每日一题<rt>LeetCode Daily Challenge</rt></ruby>，获得了 9 至 12 月的 Daily Challenge Badge 和 100 Days Badge 2022。在所有比赛中，最好的 ranking 为 <i class="fa-solid fa-chart-line"></i> 1,635。</p><p><b><i class="fa-solid fa-circle-info"></i> 更多信息，请看 <a href="/2022/leetcode.html">首页</a> | <a href="/2022/leetcode-dark.html">首页（深色模式）</a> 存档。</b></p><h2 id="wakatime">WakaTime</h2><p>在 2022 年，我总计使用了 <i class="fa-solid fa-hourglass-start"></i> 783 小时的编辑器，平均每日 2 小时 14 分钟，在 WakaTime 所有用户中排行前 4%。我最活跃的一天是 <i class="fas fa-calendar-plus"></i> 4 月 29 日，平均每周最活跃的一天是周日；使用最多的编辑器是 <i class="fa-solid fa-code"></i> VS Code，使用最多的系统是 <i class="fab fa-windows"></i> Windows，使用最多的语言是 <i class="fa-brands fa-rust"></i> Rust 和 <i class="fa-brands fa-markdown"></i> Markdown。</p><p><b><i class="fa-solid fa-circle-info"></i> 详细信息，请查看我的 <a href="/2022/wakatime.html">Code Stats for 2022</a>。</b></p><h2 id="github">GitHub</h2><h3 id="contributions">Contributions</h3><div class="tabset h-center" style="max-width: 600px;"><input type="radio" name="tabset" id="tab1" aria-controls="classic" checked> <label for="tab1" style="color: #4e9746;">Classic</label> <input type="radio" name="tabset" id="tab2" aria-controls="ylgnbu"> <label for="tab2" style="color: #467fb4;">YlGnBu</label> <input type="radio" name="tabset" id="tab3" aria-controls="purple"> <label for="tab3" style="color: #ec83c2;">Purple</label><div class="tab-panels"><section id="classic" class="tab-panel"><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/9d132a41a6a9dbd8b4361392bca72010827d46a8/github-classic.png"></p></section><section id="ylgnbu" class="tab-panel"><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/9d132a41a6a9dbd8b4361392bca72010827d46a8/github-ylgnbu.webp"></p></section><section id="purple" class="tab-panel"><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/9d132a41a6a9dbd8b4361392bca72010827d46a8/github-purple.webp"></p></section></div></div><h3 id="githubunwrapped">#GitHubUnwrapped</h3><video controls><source src="https://user-images.githubusercontent.com/20166026/213816411-45ae2a10-fb55-4acc-85c5-484531ad0320.mp4" type="video/mp4"><p>Your browser does not support the video tag. </video></p><h3 id="metrics">Metrics</h3><p><img src="https://raw.githubusercontent.com/OverflowCat/OverflowCat/8b74fbb47a220241462e7a1f1b02b2fc8edd01f4/metrics/general.svg" /></p><h2 id="apple-music">Apple Music</h2><p>以下是我的 2022 音乐回忆。</p><style>div.large {    font-size: 125%;    font-weight: 650;}</style><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/test_a/imgs/2022-wrapped/apple-music/1.png" /></p><hr /><div class="large">我已收听 1,641 首歌曲，其中几首最受青睐。</div><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/test_a/imgs/2022-wrapped/apple-music/2.webp" /></p><hr /><div class="large">我已收听 916 位艺人的歌曲，只有少数人脱颖而出。</div><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/test_a/imgs/2022-wrapped/apple-music/3.webp" /></p><hr /><div class="large">我已播放 144 张专辑。这些专辑脱颖而出。</div><p><img src="https://raw.githubusercontent.com/OverflowCat/blog/test_a/imgs/2022-wrapped/apple-music/4.webp" /></p><h2 id="不背单词">不背单词</h2><p>在 2022 年，我在不背单词学习约 300 天，共学习约 2200 词，使用时长约 5000 分钟，共复习单词约 10000 次。</p><blockquote><p><i class="fa-sharp fa-solid fa-arrow-pointer"></i> 也可以看看 <a href="/watched-in-2022/">我的 2022 观影记录</a>。</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/">年度总结</category>
      
      
      
      <comments>https://blog.xinshijiededa.men/2022/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>我的 2022 观影记录</title>
      <link>https://blog.xinshijiededa.men/watched-in-2022/</link>
      <guid>https://blog.xinshijiededa.men/watched-in-2022/</guid>
      <pubDate>Sat, 31 Dec 2022 15:54:42 GMT</pubDate>
      
        
        
      <description>&lt;head&gt;
&lt;meta charset=utf-8&gt;
&lt;link href=/_astro/index.5d7041c1.css rel=stylesheet /&gt;&lt;link href=/_astro/index.ef764f6f.css rel=stylesheet /&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<head><meta charset=utf-8><link href=/_astro/index.5d7041c1.css rel=stylesheet /><link href=/_astro/index.ef764f6f.css rel=stylesheet /></head><main class=astro-VJXTSEYV><h1 class="astro-VJXTSEYV">我的 2022 <span class="astro-VJXTSEYV text-gradient">观影记录</span></h1><p class="astro-VJXTSEYV instructions">本列表统计的观看情况至 2023 年 1 月 1 日 0 时 0 分 0 秒（<code class=astro-VJXTSEYV>1672502400</code>）止。</p><ul class="astro-VJXTSEYV link-card-grid" role=list><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja"><u>転</u>生したら<u>スラ</u>イムだった件</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">关于我<u>转生</u>变成<u>史莱姆</u>这档事</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>That Time I Got Reincarnated as a Slime</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210113710-21b7a83b-4e3f-4f73-822e-9d7ea968e2c7.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🤔</span> <span class="astro-M5ZUOYMU int">6</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">战斗的剧情有些拖沓。《日记》更好看一些。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 1  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">暴風竜ヴェルドラ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 2  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ゴブリンたちとの出会い</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 3  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ゴブリン村での戦い</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 4  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ドワーフ王国にて</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 5  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">英雄王ガゼル・ドワルゴ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 6  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">シズ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 7  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">爆炎の支配者</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 8  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">受け継がれる想い</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 9  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">大鬼族の襲撃</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">10  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">オークロード</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">11  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ガビル参上！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">12  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">狂いゆく歯車</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">13  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">大激突</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">14  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">全てを喰らう者</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">15  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ジュラの森大同盟</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">16  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔王ミリム来襲</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">17  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">集う者達</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">18  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">忍び寄る悪意</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">19  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q"><ruby><rb>暴風大妖渦</rb><rt>カリュブディス</rt></ruby></span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">20  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ユウキ・カグラザカ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">21  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">シズさんの教え子達</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">22  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">迷宮攻略</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">23  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">救われる魂</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">24  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">外伝：黒と仮面</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">24.5</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">閑話：ヴェルドラ日記</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">24.9</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">閑話：ヒナタ・サカグチ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">25  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">リムルの忙しい日々</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">26  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">獣王國との交易</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">27  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">楽園、再び</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">28  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">謀略のファルムス王国</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">29  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">災厄の前奏曲</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">30  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">動き出す麗人</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">31  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">絶望</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">32  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">希望</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">33  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">全てを賭けて</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">34  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">神之怒</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">35  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔王誕生</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">36  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">解き放たれし者</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">36  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">5 閑話：ヴェルドラ日記2</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">37  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">訪れる者たち</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">38  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">人魔会談</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">39  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ラミリスの報せ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">40  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">会議は踊る</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">41  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">会戦前夜</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">42  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔王たち</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">43  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">開宴の合図</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">44  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">因縁の地で</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">45  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">示指のアダルマン</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">46  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔王達の宴</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">47  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">起死回生</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">48  </span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q"><ruby><rb>八星魔王</rb><rt>オクタグラム</rt></ruby></span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">転スラ日記　転生したらスライムだった件</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">转生史莱姆日记　关于我转生变成史莱姆这档事</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Tensura Nikki</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><img alt=sticker class=astro-7NYY3F7Q src=https://user-images.githubusercontent.com/20166026/214770540-004d7137-3b8b-4c87-a150-40a8652409ea.png width=200px></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😋</span> <span class="astro-M5ZUOYMU int">7</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分</div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 1日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔物の町の住人たち</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 2日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">春の空气と</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 3日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ジュラの夏</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 4日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">水着で1日</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 5日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">再現ナツマツリ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 6日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">うつろいかわる</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 7日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔王が来た！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 8日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">みのりの秋</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace"> 9日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">冬のおとずれ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">10日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">魔物の町の雪化粧</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">11日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">サンタクロースはどこにい</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">12日记</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">正月を満喫</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="zh">开端</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Reset</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/214769808-4c2e2783-13bd-4ea4-8309-8687acca4d42.mp4 type=video/mp4></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😋</span> <span class="astro-M5ZUOYMU int">7</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">6</span> </b>分 —— <span class="astro-7NYY3F7Q comment">很好的一部电视剧！剧情安排得进度非常好。</span></div><div class="astro-7NYY3F7Q episodes"><b class=astro-7NYY3F7Q>观看进度</b>： 已观看，共 15 集</div></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja"><span style="color:#f0555a">リ</span>コリス・<span style="color:#00b4aa">リ</span>コイル</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">莉可莉丝</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en><span style="color:#f0555a">L</span>ycoris <span style="color:#00b4aa">R</span>ecoil</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210098922-60138d17-9260-4eaa-831d-197c0a056125.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😘</span> <span class="astro-M5ZUOYMU int">8</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">音乐不错。叙事比较混乱。</span></div><ol class="astro-7NYY3F7Q episodes" lang="en"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Easy does it</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">The more the merrier</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">More haste, less speed</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Nothing seek, nothing find</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">So far, so good</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Opposites attract</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Time will tell</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Another day, another dollar</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">What's done is done</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Repay evil with evil</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Diamond cut diamond</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Nature versus nurture</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Recoil of Lycoris</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">スパイファミリー</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">间谍过家家</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>SPY×FAMILY</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210111874-68d63fa8-5dfe-4117-b479-6ceb3319068c.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🥰</span> <span class="astro-M5ZUOYMU int">8</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">7</span> </b>分 —— <span class="astro-7NYY3F7Q comment">完成度很高，无论是作画、配音、叙事还是人物塑造都挑不出什么缺点。第二季剧情比第一季更有意思，也不拘泥于一集一个 MISSION 了。第二季的 ED 不错。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">オペレーション〈<ruby><rb>梟</rb><rp>（</rp><rt>ストリクス</rt><rp>）</rp></ruby>〉</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">妻役を確保せよ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">受験対策をせよ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">名門校面接試験</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">合否の行方</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ナカヨシ作戦</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q"><ruby><rb>標的</rb><rp>（</rp><rt>ターゲット</rt><rp>）</rp></ruby>の次男</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">対秘密警察偽装作戦</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ラブラブを見せつけよ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ドッジボール大作戦</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q"><ruby><rb>星</rb><rp>（</rp><rt>ステラ</rt><rp>）</rp></ruby></span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ペンギンパーク</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">プロジェクト〈アップル〉</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">時限爆弾を解除せよ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">新しい家族</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ヨル's キッチン / 情報屋の恋愛大作戦</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ぐりほんさくせんを決行せよ /〈<ruby><rb>鋼鉄の淑女</rb><rp>（</rp><rt>フルメタルレディ</rt><rp>）</rp></ruby>〉/ オムライス♡</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">家庭教師の叔父 /〈<ruby><rb>東雲</rb><rp>（</rp><rt>しののめ</rt><rp>）</rp></ruby>〉</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">デズモンドへの復讐計画 / 母、風になる</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">総合病院を調査せよ / 難解な暗号を解読せよ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">〈<ruby><rb>夜帷</rb><rp>（</rp><rt>とばり</rt><rp>）</rp></ruby>〉/ はじめての嫉妬</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">地下テニス大会 キャンベルトン</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">揺るがぬ軌道</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">母役と妻役 / ともだちとかいもの</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q"><ruby><rb>接敵作戰</rb><rp>（</rp><rt>ファーストコンタクト</rt><rp>）</rp></ruby></span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">メイドインアビス <span style="color:#f5a100">烈日の黄金郷</span></span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">来自深渊：<span style="color:#f5a100">烈日的黄金乡</span></span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Made In Abyss: The Golden City of the Scorching Sun</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210112857-d661e2bd-4982-4b69-933a-a805713e6b42.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🥰</span> <span class="astro-M5ZUOYMU int">8</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">8</span> </b>分 —— <span class="astro-7NYY3F7Q comment">比第一季略差，第一季我可以给到满分。音乐依旧都是神作。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">羅針盤は闇を指した</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">還らずの都</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">成り果て村</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">友人</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">秘匿</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">呼び込み</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">欲望の揺籃</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">願いの形</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">帰還</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">拾うものすべて</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">価値</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">黄金</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">夜は猫といっしょ</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">夜夜猫歌</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Nights with a Cat</i> <span class="astro-7NYY3F7Q status ongoing">连载中</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210170506-abb73c42-c336-4369-aa9e-b21119e3b2fb.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😋</span> <span class="astro-M5ZUOYMU int">7</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">5</span> </b>分 —— <span class="astro-7NYY3F7Q comment">不错的泡面番。猫猫好。ED 好。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　一　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコが家に来た日</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　二　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">帰宅後のあまえ方がはげしい</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　三　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">物を落としたいネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　四　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコのグルーミングは痛い</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　五　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコの耳にビンタされる</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　六　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">焼き魚観察しにくるネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　七　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコの写真うまく撮れない</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　八　夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコの動画うまく撮れない</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　九　夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">うまく持ち上げられない</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第　十　夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコのずつき攻撃</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十一 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">やさしいネコパンチ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十二 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">かまってほしいネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十三 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコの耳裏返しがち</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十四 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコに乗せたくなる</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十五 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコとだるまさんが転んだ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十六 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">感動シーンに寄ってくるネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十七 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコは頭が通れば通り抜けられる</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十八 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">どいてくれないネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 十九 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコが足に乗りに来た</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第 二十 夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">抜け毛の時期のネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十一夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ネコが噛んできた</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十二夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコにびっくりする</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十三夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ソファーの下を覗くネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十四夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">人差し指を嗅がずにいられない</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十五夜</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ネコに振り向いてほしい</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十六夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">ふくらんだしっぽが気になる</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十七夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">映画鑑賞をジャマするネコ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">第二十八夜</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">となりに座るネコ</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">サイバーパンク エッジランナーズ</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">赛博朋克：边缘行者</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Cyberpunk: Edgerunners</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210111496-3e155170-b468-450b-8ebb-aa60ea188f20.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😘</span> <span class="astro-M5ZUOYMU int">8</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">情节紧凑，甚至后面进展太快了。对感情的刻画少了点。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">期待を背に</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">少年は何を思う</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">裏稼業</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ツキが回って</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">刺さる目線</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">炎に包まれて</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">もっと強く</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">いかないで</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">人間らしさ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">私の月、私の恋</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">ぼっち・ざ・ろっく!</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">孤独摇滚！</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Bocchi the Rock!</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210108292-bdc34431-1efc-47fd-add9-b64877ad9a11.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🤩</span> <span class="astro-M5ZUOYMU int">9</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">5</span> </b>分 —— <span class="astro-7NYY3F7Q comment">非常 dramatic，简直是 meme 制造机，很好。音乐也很好。不过不太喜欢直接插入真实世界的照片作为场景（还有饼）的做法。不给满分的原因是对于乐队外的人的描写比较少，而这对于主角们的刻画也是至关重要的。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">転がるぼっち</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">また明日</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">馳せサンズ</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ジャンピングガール(ズ)</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">飛べない魚</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">八景</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">君の家まで</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">ぼっち・ざ・ろっく</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">江ノ島エスカー</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">アフターダーク</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">十二進法の夕景</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">君に朝が降る</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">Do It Yourself!! -どぅー・いっと・ゆあせるふ-</span> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210150374-e29c42e8-1c30-4150-a92e-098779d02444.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😘</span> <span class="astro-M5ZUOYMU int">8</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">1</span> </b>分 —— <span class="astro-7NYY3F7Q comment">主题很有新意！不足之处在于大部分场景都与科技发展不符；人物说话很啰嗦，比较拖沓，不知道台词是怎么写的，听起来非常别扭。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step①</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どー・いう・やつ？</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step②</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、だれかと・いっしょに・やるってこと？</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step③</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どうして・いきなり・やってきた？</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step④</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どこでも・いごこち・よくなるよ</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑤</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どこかに・いばしょが・ようやく</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑥</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どうでも・いいもの・やくにたつ！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑦</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、ぢめぢめしてたら・いえで・やればいいね</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑧</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、できない？・いいえ！・やれますとも！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑨</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どっきり？・いがい！・よていがい！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑩</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どんぞこ？・いんぽっしぶる？・ゆうきとやるきがあればなんでもできる！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑪</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どぅー・いっと・ゆあせるふ！</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">Step⑫</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">DIYって、どんなときも・いつまでも・ゆうじょう！</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="zh">三体（艺画开天）</span> <span class="astro-7NYY3F7Q status ongoing">连载中</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210150710-564cb5cf-5245-42be-8be5-96bac197e8b9.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🤬</span> <span class="astro-M5ZUOYMU int">3</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">这个是 2022 年看了前 4 集的想法，现在看来还是给多了，至少远不如 WeTV 的电视剧。最明显的是 3D 建模实在是太差了，人的模型表面纹理、次表面反射都没有。因此我的评价是是：<div class="astro-SXA2MWRF atquo"><blockquote class="astro-SXA2MWRF">你已经浪费了金钱，就不要再浪费时间了。</blockquote><p class="astro-SXA2MWRF attribution">——<span class="astro-DQ3IULQD pn outer"> <span class="astro-DQ3IULQD pn inner"><ruby class=astro-VJXTSEYV>刘慈欣<rt class=astro-VJXTSEYV>shipship</rt></ruby></span> </span>对<span class="astro-DQ3IULQD pn outer"> <span class="astro-DQ3IULQD pn inner">王晋康 </span></span>作品<span class="wavybookmark">十字</span>的私下评价</p></div></span></div><ol class="astro-7NYY3F7Q episodes" lang="zh"><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">意义之塔</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">遥远的射手</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">凡尔纳岛</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">光锥之内</span></li><li class="astro-7NYY3F7Q ep"><span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">对面壁者的笑</span></li></ol></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="zh">天才基本法</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>The Heart of Genius</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><video autoplay class=astro-PH2BR6VF loop muted playsinline width=168px><source class=astro-PH2BR6VF src=https://user-images.githubusercontent.com/20166026/210151185-aeb8a0b0-8119-4c6e-96e9-283bebb26eaf.webm type=video/webm></video></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🤔</span> <span class="astro-M5ZUOYMU int">6</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">5</span> </b>分</div><div class="astro-7NYY3F7Q episodes"><b class=astro-7NYY3F7Q>观看进度</b>： 31 / 34</div></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="ja">唐人街探偵 東京MISSION</span> <span class="astro-7NYY3F7Q slash">/ </span><span class="astro-7NYY3F7Q" lang="zh">唐人街探案3</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>Detective Chinatown 3</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><img alt=sticker class=astro-7NYY3F7Q src=https://raw.githubusercontent.com/OverflowCat/blog/36780e77324b2c2d4e3db0f449ba2e68e9255b2f/chinatown.webp width=200px></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😔</span> <span class="astro-M5ZUOYMU int">5</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">部分任务设计得没啥意思，感觉还没有上一部好。中间有个插入歌不错。</span></div><div class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q watched">已观看</span></div></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="zh">火星救援</span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en>The Martian</i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">🤔</span> <span class="astro-M5ZUOYMU int">6</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">5</span> </b>分 —— <span class="astro-7NYY3F7Q comment">没啥新意。</span></div><div class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q watched">已观看</span></div></div></li><li class="astro-7NYY3F7Q link-card"><div class="astro-7NYY3F7Q container"><h2 class="astro-7NYY3F7Q"><span class="astro-7NYY3F7Q" lang="zh"><span style="color:red">＜</span><span style="color:red">/</span>天蝎<span style="color:red">＞</span></span> <span class="astro-7NYY3F7Q slash">/ </span><i class="astro-7NYY3F7Q monospace title-en" lang=en><span style="color:red">＜</span><span style="color:red">/</span>SCORPION<span style="color:red">＞</span></i> <span class="astro-7NYY3F7Q status concluded">已完结</span></h2><div class="astro-7NYY3F7Q sticker"><img alt=sticker class=astro-7NYY3F7Q src=https://upload.wikimedia.org/wikipedia/zh/0/03/Scorpion_intertitle.png width=200px></div><div class="astro-7NYY3F7Q review"><b class=astro-M5ZUOYMU><span class="astro-M5ZUOYMU emoji">😋</span> <span class="astro-M5ZUOYMU int">7</span><span class="astro-M5ZUOYMU">.</span><span class="astro-M5ZUOYMU float">0</span> </b>分 —— <span class="astro-7NYY3F7Q comment">中规中矩的美剧。</span></div><ol class="astro-7NYY3F7Q episodes" lang="ja"><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E01</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Pilot</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E02</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Single Point of Failure</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E03</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">A Cyclone</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E04</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Shorthanded</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E05</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Plutonium is Forever</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E06</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">True Colors</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E07</span> <span class="astro-7NYY3F7Q watched">看过</span> <span class="astro-7NYY3F7Q">Father's Day</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E08</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">Risky Business</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E09</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">Rogue Element</span></li><li class="astro-7NYY3F7Q ep custom"><span class="astro-7NYY3F7Q monospace">S01E10</span> <span class="astro-7NYY3F7Q unwatched">待看</span> <span class="astro-7NYY3F7Q">Talismans</span></li></ol></div></li></ul></main>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/year-wrapped/">年终总结</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E7%95%AA%E7%BB%84/">番组</category>
      
      
      <comments>https://blog.xinshijiededa.men/watched-in-2022/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>在 Tauri 中实现鼠标穿透和透明窗口</title>
      <link>https://blog.xinshijiededa.men/tauri-transparent-window/</link>
      <guid>https://blog.xinshijiededa.men/tauri-transparent-window/</guid>
      <pubDate>Thu, 29 Dec 2022 13:18:34 GMT</pubDate>
      
        
        
      <description>&lt;figure&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/20166026/209962263-969d24a5-eef3-49d8-b446-98b581bc4296.png&quot; alt=&quot;&quot; /&gt;&lt;figcapti</description>
        
      
      
      
      <content:encoded><![CDATA[<figure><img src="https://user-images.githubusercontent.com/20166026/209962263-969d24a5-eef3-49d8-b446-98b581bc4296.png" alt="" /><figcaption>效果</figcaption></figure><blockquote><p>本文测试通过的 Tauri 版本为 <code>1.0</code> 和 <code>1.2</code>。</p><p><img src="https://raw.githubusercontent.com/tauri-apps/tauri-docs/335bab9ee7443bc31da1b1e8e26ede47ab25943a/static/img/index/header_light.svg" /></p></blockquote><h2 id="鼠标穿透">鼠标穿透</h2><h3 id="依赖">依赖</h3><p>在 <code>cargo.toml</code> 中添加</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">windows</span> = &#123; version = <span class="string">&quot;0.43.0&quot;</span>, features = [</span><br><span class="line">    <span class="string">&quot;Win32_Foundation&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Win32_UI_WindowsAndMessaging&quot;</span>,</span><br><span class="line">] &#125;</span><br></pre></td></tr></table></figure><h3 id="代码">代码</h3><p>初始化窗口时通过 <code>setup</code> 传闭包拿到 <code>window</code> 进行操作。只支持 Windows。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">tauri::Builder::<span class="title function_ invoke__">default</span>()</span><br><span class="line">    .<span class="title function_ invoke__">setup</span>(|app| &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">window</span> = app.<span class="title function_ invoke__">get_window</span>(<span class="string">&quot;main&quot;</span>).<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">        <span class="meta">#[cfg(windows)]</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">use</span> windows::Win32::Foundation::HWND;</span><br><span class="line">            <span class="keyword">let</span> <span class="variable">hwnd</span> = window.<span class="title function_ invoke__">hwnd</span>().<span class="title function_ invoke__">unwrap</span>().<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">let</span> <span class="variable">hwnd</span> = <span class="title function_ invoke__">HWND</span>(hwnd);</span><br><span class="line">            <span class="keyword">unsafe</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">style_ex</span> = <span class="title function_ invoke__">WINDOW_EX_STYLE</span>(<span class="title function_ invoke__">GetWindowLongW</span>(hwnd, GWL_EXSTYLE) <span class="keyword">as</span> <span class="type">u32</span>);</span><br><span class="line">                style_ex |= WS_EX_APPWINDOW <span class="comment">// for taskbar</span></span><br><span class="line">                | WS_EX_COMPOSITED</span><br><span class="line">                | WS_EX_LAYERED</span><br><span class="line">                | WS_EX_TRANSPARENT</span><br><span class="line">                | WS_EX_TOPMOST;</span><br><span class="line">                <span class="keyword">use</span> windows::Win32::UI::WindowsAndMessaging::*;</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">nindex</span> = GWL_EXSTYLE;</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">_pre_val</span> = <span class="title function_ invoke__">SetWindowLongA</span>(hwnd, nindex, style_ex.<span class="number">0</span> <span class="keyword">as</span> <span class="type">i32</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">Ok</span>(())</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_ invoke__">invoke_handler</span>(tauri::generate_handler![...])</span><br><span class="line">    .<span class="title function_ invoke__">run</span>(tauri::generate_context!())</span><br><span class="line">    .<span class="title function_ invoke__">expect</span>(<span class="string">&quot;error while running tauri application&quot;</span>);</span><br></pre></td></tr></table></figure><p>官方的实现目前<a href="https://github.com/tauri-apps/tauri/issues/2090">还没有进入</a> tauri，只能先凑合用用。</p><blockquote><p>Hi, since <a href="https://github.com/tauri-apps/tao/pull/421">tauri-apps/tao#421</a> was merged into <code>tao</code>, can that function be exposed in tauri's api?</p></blockquote><h2 id="透明窗口">透明窗口</h2><h3 id="窗口设置">窗口设置</h3><p>为了实现透明窗口，还需要修改 <code>tauri.config.json</code>。当然，直接修改 window 或者通过 <code>tauri::Builder</code> 应该也是可以的。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;tauri&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    …<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;windows&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;fullscreen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;resizable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;transparent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;alwaysOnTop&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="css">CSS</h3><p>另外，不要忘记修改需要透明的地方的 CSS。如果你使用了 SvelteKit 模板，可以在 <code>+layout.svelte</code> 中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>以上。🪟</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/frontend/">页面仔的自我修养</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/Tauri/">Tauri</category>
      
      
      <comments>https://blog.xinshijiededa.men/tauri-transparent-window/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>射箭之歌</title>
      <link>https://blog.xinshijiededa.men/song-of-archery/</link>
      <guid>https://blog.xinshijiededa.men/song-of-archery/</guid>
      <pubDate>Mon, 26 Dec 2022 08:24:00 GMT</pubDate>
      
        
        
      <description>&lt;lite-youtube videoid=&quot;DlETvAfOMbk&quot;&gt;&lt;/lite-youtube&gt;
&lt;script src=&quot;https://paulirish.github.io/lite-youtube-embed/src/lite-yt-embed.js&quot;&gt;&lt;/scri</description>
        
      
      
      
      <content:encoded><![CDATA[<lite-youtube videoid="DlETvAfOMbk"></lite-youtube><script src="https://paulirish.github.io/lite-youtube-embed/src/lite-yt-embed.js"></script><link rel="stylesheet" href="https://paulirish.github.io/lite-youtube-embed/src/lite-yt-embed.css" /><div class="mnc-area"><div lang="mnc">ᠮᠠᠨᠵᡠᡳ ᠮᠠᡶᠠᡵᡳᡳ ᠠᡩᠠᠯᡳ</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠮᠪᡳ</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mnc">ᠣᡳᠯᠣᡥᠣᠨ ᡩᠠᠪᡩᡠᡵᡳ ᠵᠠᠯᠠᠨ ᡩᡝ</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mnc">ᠮᠠᠨᠵᡠᡳ ᠮᠠᡶᠠᡵᡳᡳ ᠠᡩᠠᠯᡳ</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠮᠪᡳ</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mnc">ᠣᡳᠯᠣᡥᠣᠨ ᡩᠠᠪᡩᡠᡵᡳ ᠵᠠᠯᠠᠨ ᡩᡝ</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">僕の　小さな　姿が　ある</div><div lang="zh">有我渺小的身影</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠣ?</div><div lang="ja">あなたの　弓は　張っているか？</div><div lang="zh">你的弓上弦了吗？</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠣ?</div><div lang="ja">親指　に　搬指　を　掛けているか？</div><div lang="zh">扳指戴在拇指上了吗？</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠣ?</div><div lang="ja">あなたの　矢　を　放ったか？</div><div lang="zh">你的箭射出了吗？</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᠶᠠ ᠪᠠ ᡩᡝ ᠪᡳᠨᡳ?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠪᡳ</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠪᡳ</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠪᡳ</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᠶᠠ ᠪᠠ ᡩᡝ ᠪᡳᠨᡳ?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mnc">ᠮᠠᠨᠵᡠᡳ ᠮᠠᡶᠠᡵᡳᡳ ᠠᡩᠠᠯᡳ</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠮᠪᡳ</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mnc">ᠣᡳᠯᠣᡥᠣᠨ ᡩᠠᠪᡩᡠᡵᡳ ᠵᠠᠯᠠᠨ ᡩᡝ</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mnc">ᠮᠠᠨᠵᡠᡳ ᠮᠠᡶᠠᡵᡳᡳ ᠠᡩᠠᠯᡳ</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠮᠪᡳ</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mnc">ᠣᡳᠯᠣᡥᠣᠨ ᡩᠠᠪᡩᡠᡵᡳ ᠵᠠᠯᠠᠨ ᡩᡝ</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">僕の　小さな　姿が　ある</div><div lang="zh">有我渺小的身影</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠣ?</div><div lang="ja">あなたの　弓は　張っているか？</div><div lang="zh">你的弓上弦了吗？</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠣ?</div><div lang="ja">親指　に　搬指　を　掛けているか？</div><div lang="zh">扳指戴在拇指上了吗？</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠣ?</div><div lang="ja">あなたの　矢　を　放ったか？</div><div lang="zh">你的箭射出了吗？</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᡨᡠᠪᠠ ᡩᡝ ᠪᡳᠨᡳ</div><div lang="ja">囲場は　あそこ　だ</div><div lang="zh">围场在那里</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠪᡳ</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠪᡳ</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠪᡳ</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᡨᡠᠪᠠ ᡩᡝ ᠪᡳᠨᡳ</div><div lang="ja">囲場は　あそこ　だ</div><div lang="zh">围场在那里</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ ᡤᠠᠪᡨᠠᠴᡳᠨᠠ</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠪᡳ</div><div lang="ja">あなたの　弓は　張られている</div><div lang="zh">你的弓已上弦</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠪᡳ</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠪᡳ</div><div lang="ja">あなたの　矢　を　放った</div><div lang="zh">你的箭已射出</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᠶᠠ ᠪᠠ ᡩᡝ ᠪᡳᠨᡳ?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠪᡝᡵᡳ ᡩᡝ ᡠᠯᡳ ᠪᡝ ᡨᡝᠪᡠᡥᡝᠪᡳ</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mnc">ᠰᡳᠮᡥᡠᠨ ᡩᡝ ᡶᡝᡵᡤᡝᡨᡠᠨ ᠪᡝ ᡝᡨᡠᡥᡝᠪᡳ</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mnc">ᠮᡳᠨᡳ ᠰᡳᡵᡩᠠᠨ ᠪᡝ ᡤᠠᠪᡨᠠᡥᠠᠪᡳ</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mnc">ᡥᠣᡳᡥᠠᠨ ᠶᠠ ᠪᠠ ᡩᡝ ᠪᡳᠨᡳ?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mnc">ᠮᠠᠨᠵᡠᡳ ᠮᠠᡶᠠᡵᡳᡳ ᠠᡩᠠᠯᡳ</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mnc">ᠮᡠᠰᡝ ᠰᠠᠰᠠ ᡤᠠᠪᡨᠠᠮᠪᡳ</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mnc">ᠣᡳᠯᠣᡥᠣᠨ ᡩᠠᠪᡩᡠᡵᡳ ᠵᠠᠯᠠᠨ ᡩᡝ</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mnc">ᠰᡳᠨᡳ ᠪᡠᠶᠠ ᠪᡝᠶᡝ ᠪᡳ</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><p><br /></p></div><p><img src="https://user-images.githubusercontent.com/20166026/209539033-4c6105be-6c31-4232-9651-52f6c355da86.jpg" /></p><h2 id="穆麟德转写">穆麟德转写</h2><div lang="mö">manju-i mafari-i adali</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mö">muse sasa gabtambi</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mö">oilohon dabduri jalan de</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mö">sini buya beye bi</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mö">manju-i mafari-i adali</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mö">muse sasa gabtambi</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mö">oilohon dabduri jalan de</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mö">mini buya beye bi</div><div lang="ja">僕の　小さな　姿が　ある</div><div lang="zh">有我渺小的身影</div><br /><div lang="mö">sini beri de uli be tebuheo?</div><div lang="ja">あなたの　弓は　張っているか？</div><div lang="zh">你的弓上弦了吗？</div><br /><div lang="mö">simhun de fergetun be etuheo?</div><div lang="ja">親指　に　搬指　を　掛けているか？</div><div lang="zh">扳指戴在拇指上了吗？</div><br /><div lang="mö">sini sirdan be gabtahao?</div><div lang="ja">あなたの　矢　を　放ったか？</div><div lang="zh">你的箭射出了吗？</div><br /><div lang="mö">hoihan ya ba de bini?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mö">mini beri de uli be tebuhebi</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mö">simhun de fergetun be etuhebi</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mö">mini sirdan be gabtahabi</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mö">hoihan ya ba de bini?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mö">muse sasa gabtacina gabtacina</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mö">muse sasa gabtacina gabtacina</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mö">manju-i mafari-i adali</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mö">muse sasa gabtambi</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mö">oilohon dabduri jalan de</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mö">sini buya beye bi</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mö">manju-i mafari-i adali</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mö">muse sasa gabtambi</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mö">oilohon dabduri jalan de</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mö">mini buya beye bi</div><div lang="ja">僕の　小さな　姿が　ある</div><div lang="zh">有我渺小的身影</div><br /><div lang="mö">sini beri de uli be tebuheo?</div><div lang="ja">あなたの　弓は　張っているか？</div><div lang="zh">你的弓上弦了吗？</div><br /><div lang="mö">simhun de fergetun be etuheo?</div><div lang="ja">親指　に　搬指　を　掛けているか？</div><div lang="zh">扳指戴在拇指上了吗？</div><br /><div lang="mö">sini sirdan be gabtahao?</div><div lang="ja">あなたの　矢　を　放ったか？</div><div lang="zh">你的箭射出了吗？</div><br /><div lang="mö">hoihan tuba de bini</div><div lang="ja">囲場は　あそこ　だ</div><div lang="zh">围场在那里</div><br /><div lang="mö">mini beri de uli be tebuhebi</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mö">simhun de fergetun be etuhebi</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mö">mini sirdan be gabtahabi</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mö">hoihan tuba de bini</div><div lang="ja">囲場は　あそこ　だ</div><div lang="zh">围场在那里</div><br /><div lang="mö">muse sasa gabtacina gabtacina</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mö">muse sasa gabtacina gabtacina</div><div lang="ja">僕達　一緒に　弓を射ろう　弓を射ろう</div><div lang="zh">咱们一起射箭吧、射箭吧</div><br /><div lang="mö">sini beri de uli be tebuhebi</div><div lang="ja">あなたの　弓は　張られている</div><div lang="zh">你的弓已上弦</div><br /><div lang="mö">simhun de fergetun be etuhebi</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mö">sini sirdan be gabtahabi</div><div lang="ja">あなたの　矢　を　放った</div><div lang="zh">你的箭已射出</div><br /><div lang="mö">hoihan ya ba de bini?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mö">mini beri de uli be tebuhebi</div><div lang="ja">私の　弓は　張られている</div><div lang="zh">我的弓已上弦</div><br /><div lang="mö">simhun de fergetun be etuhebi</div><div lang="ja">親指　に　搬指　を　掛けている</div><div lang="zh">扳指已戴在拇指</div><br /><div lang="mö">mini sirdan be gabtahabi</div><div lang="ja">僕の　矢　を　放った</div><div lang="zh">我的箭已射出</div><br /><div lang="mö">hoihan ya ba de bini?</div><div lang="ja">囲場は　どこ？</div><div lang="zh">围场在哪里呢？</div><br /><div lang="mö">manju-i mafari-i adali</div><div lang="ja">満洲の　祖先の　ように</div><div lang="zh">像满洲的先民们一样</div><br /><div lang="mö">muse sasa gabtambi</div><div lang="ja">僕達　一緒に　弓を射よう</div><div lang="zh">咱们一起射箭吧</div><br /><div lang="mö">oilohon dabduri jalan de</div><div lang="ja">軽薄な　世界の中　で</div><div lang="zh">在浮躁的人世间</div><br /><div lang="mö">sini buya beye bi</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影</div><br /><div lang="mö">sini buya beye bi</div><div lang="ja">あなたの　小さな　姿が　ある</div><div lang="zh">有你渺小的身影🏹</div><br /><style>    br {        user-select: none;        font-size: 75%;    }</style><p><img src="https://user-images.githubusercontent.com/20166026/209537003-3ae8b85c-3177-4757-aaff-2af9b01ffa73.png" width="400px"></p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E6%BB%A1%E8%AF%AD/">满语</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E6%AD%8C%E8%AF%8D/">歌词</category>
      
      
      <comments>https://blog.xinshijiededa.men/song-of-archery/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>下载 Chrome 开发者工具「网络」面板中的文件</title>
      <link>https://blog.xinshijiededa.men/download-files-in-devtools/</link>
      <guid>https://blog.xinshijiededa.men/download-files-in-devtools/</guid>
      <pubDate>Mon, 26 Dec 2022 05:47:52 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Chrome 开发者工具的「网络」面板可以查看所有的网络请求。&lt;code&gt;fetch&lt;/code&gt; 发送的请求不会出现在「源代码」面板中，只能通过「网络」里下载。讨厌的是，Chrome 没有提供在列表内直接下载对应的响应的功能，双击对应的请求仍然只会在新标签页重新发送请求，</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Chrome 开发者工具的「网络」面板可以查看所有的网络请求。<code>fetch</code> 发送的请求不会出现在「源代码」面板中，只能通过「网络」里下载。讨厌的是，Chrome 没有提供在列表内直接下载对应的响应的功能，双击对应的请求仍然只会在新标签页重新发送请求，而不是下载已抓取的资源。若远程服务器上的资源已失效，则无法成功下载。虽然可以直接通过「响应」查看内容，但若请求是 binary，则可能包含非法的 Unicode 位点，无法通过复制粘贴将内容正确地保存到本地。</p><p>此时，可以通过右键任意一请求，点选菜单最下方「以 HAR 格式保存所有内容」或点击如下所示的下载按钮保存 HAR。</p><figure><img src="https://user-images.githubusercontent.com/20166026/209518112-363973c9-ccca-412c-889c-05f6b530bf01.png" alt="" /><figcaption>保存 HAR</figcaption></figure><p>HAR 实质是 JSON。通过文本编辑器打开下载的 HAR 文件，依据「标头」-「响应标头」中的 <code>Content-Length</code> 查找到对应的请求内容，即可在 <code>content &gt; text</code> 中看到 Base64 编码的 response 内容。</p><p><img src="https://user-images.githubusercontent.com/20166026/209519101-4785d3ec-3d06-476f-849e-1afb31384a18.png" /></p><p>此时我们可以安心地将内容复制出来，解码即可。推荐使用命令行工具。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> codecs <span class="keyword">import</span> <span class="built_in">open</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;b64.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = base64.b64decode(f.read())</span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(content)</span><br></pre></td></tr></table></figure><p>注意若用 Python 处理，写入文件的内容不一定是合法字符串，故 <code>open</code> 的参数需要为 <code>wb</code>，否则会有 <code>TypeError: write() argument must be str, not bytes</code>。</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/frontend/">页面仔的自我修养</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/Chrome/">Chrome</category>
      
      
      <comments>https://blog.xinshijiededa.men/download-files-in-devtools/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>光栅衍射</title>
      <link>https://blog.xinshijiededa.men/diffraction-grating/</link>
      <guid>https://blog.xinshijiededa.men/diffraction-grating/</guid>
      <pubDate>Sun, 25 Dec 2022 17:49:21 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;i class=&quot;fa-solid fa-arrows-turn-to-dots&quot;&gt;&lt;/i&gt; &lt;strong&gt;消歧义&lt;/strong&gt;：本页面中的&lt;strong&gt;「光栅」&lt;/strong&gt;指的是刻有平行等宽、等距狭缝的平面玻璃或金属片，而非「栅格</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><i class="fa-solid fa-arrows-turn-to-dots"></i> <strong>消歧义</strong>：本页面中的<strong>「光栅」</strong>指的是刻有平行等宽、等距狭缝的平面玻璃或金属片，而非「栅格化」．</p></blockquote><figure><img src="https://upload.wikimedia.org/wikipedia/commons/d/da/Density_plot_of_diffraction_grating.jpg" alt="" /><figcaption>衍射条纹</figcaption></figure><h2 id="光栅常数">光栅常数</h2><p><strong>光栅</strong>是刻有平行等宽、等距狭缝的平面玻璃或金属片．缝的宽度用 <span class="math inline">\(a\)</span> 表示，非缝部位的宽度用 <span class="math inline">\(b\)</span> 表示，相邻两缝的中心线的距离用 <span class="math inline">\(d\)</span> 表示，称为<strong>光栅常数</strong>，有 <span class="math inline">\(d=a+b\)</span>．</p><h3 id="例题">例题</h3><p>一个每毫米有 <span class="math inline">\(800\)</span> 条刻线的光栅的光栅常数为 <span class="math inline">\(d=\dfrac 1 {800} = 1.25\times 10^{-6}\mathrm m\)</span>．</p><h2 id="主极大">主极大</h2><p><span class="math display">\[d\sin \theta=\pm k\lambda, k=0,1,2…\]</span></p><p>此描述光栅结构与光的入射角和衍射角之间关系的公式即为<strong>光栅方程</strong>．其中 <span class="math inline">\(\theta\)</span> 为衍射角，即波衍射时行进方向与法线之间的角度． <span class="math inline">\(\lambda\)</span> 为光线的波长． <span class="math inline">\(k\)</span> 向下取整，即 <span class="math inline">\(k = \big[\dfrac {d\sin\theta}\lambda\big]\approx\big[\dfrac{a+b}\lambda\big]\)</span> 为主极大的最大极数．加上 0 级主极大，一共有 <span class="math inline">\(2[k]+1\)</span> 个主极大．</p><p>近似后，有角位置 <span class="math inline">\(\theta=\dfrac{k\lambda}d\)</span> ，线位置 <span class="math inline">\(x=\theta\cdot f=fk\dfrac \lambda d\)</span> ．</p><h3 id="例题-1">例题</h3><blockquote><p>用波长为 <span class="math inline">\(\lambda\)</span> 的单色平行光垂直入射在一块多缝光栅上，其光栅常数 <span class="math inline">\(d＝3\)</span> <span class="math inline">\(\mathrm{mm}\)</span> ，缝宽 <span class="math inline">\(a＝1\)</span> <span class="math inline">\(\mathrm{mm}\)</span> ，则在单缝衍射的中央明条纹中共有______条谱线（主极大）．</p></blockquote><p>本题缺级从 <span class="math inline">\(k=3\)</span> 开始，因此中央明条纹中有 <span class="math inline">\(0\)</span>，<span class="math inline">\(±1\)</span>，<span class="math inline">\(±2\)</span> 共五条谱线．</p><h2 id="缺级">缺级</h2><p>除了双缝干涉，光栅间还会发生单缝衍射，部分明条纹会不见，即为 <strong>缺级</strong>：</p><p><span class="math display">\[k=\dfrac{d}{a}k&#39;,k=1,2,3…\]</span></p><p>第 <span class="math inline">\(\pm k\)</span> 级会发生缺级．</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%85%89%E5%AD%A6/">光学</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%A4%87%E5%BF%98/">备忘</category>
      
      
      <comments>https://blog.xinshijiededa.men/diffraction-grating/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>拉普拉斯变换速查表</title>
      <link>https://blog.xinshijiededa.men/laplace-transform-cheatsheet/</link>
      <guid>https://blog.xinshijiededa.men/laplace-transform-cheatsheet/</guid>
      <pubDate>Fri, 16 Dec 2022 14:16:47 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;i class=&quot;fa-solid fa-infinity&quot;&gt;&lt;/i&gt; 本表是&lt;strong&gt;动态列表&lt;/strong&gt;。动态列表是指&lt;strong&gt;未完成的列表&lt;/strong&gt;。它也许永远不会被完整地完成。&lt;/p&gt;
&lt;/blockquote&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><i class="fa-solid fa-infinity"></i> 本表是<strong>动态列表</strong>。动态列表是指<strong>未完成的列表</strong>。它也许永远不会被完整地完成。</p></blockquote><p><picture> <source srcset="https://raw.githubusercontent.com/OverflowCat/blog/4571def89a28dea9a549678b2f58be7f3743fe5d/l-on-blackboard.webp" type="image/webp"> <source srcset="https://user-images.githubusercontent.com/20166026/208291325-61a663c7-dac4-4ae6-b41c-b2b0a53905fe.png" type="image/jpeg"> <img src="https://user-images.githubusercontent.com/20166026/208291325-61a663c7-dac4-4ae6-b41c-b2b0a53905fe.png" width="210px" alt="黑板上的字母L。这是一幅AI生成的画作。"> </picture></p><table><thead><tr class="header"><th>时域 <span class="math inline">\(f(t)\)</span></th><th>频域 <span class="math inline">\(F(s)=\mathscr L[f(t)]\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math display">\[\delta&#39;(t)\]</span></td><td><span class="math display">\[s\]</span></td></tr><tr class="even"><td><span class="math display">\[\delta(t)\]</span></td><td><span class="math display">\[1\]</span></td></tr><tr class="odd"><td><span class="math display">\[u(t)\]</span></td><td><span class="math display">\[\frac 1 s\]</span></td></tr><tr class="even"><td><span class="math display">\[e^{-at}\]</span></td><td><span class="math display">\[\frac 1 {s+a}\]</span></td></tr><tr class="odd"><td><span class="math display">\[te^{-at}\]</span></td><td><span class="math display">\[\frac{1}{(s+a)^2}\]</span></td></tr><tr class="even"><td><span class="math display">\[t\]</span></td><td><span class="math display">\[\frac 1 {s^2}\]</span></td></tr><tr class="odd"><td><span class="math display">\[\frac{t^2}2\]</span></td><td><span class="math display">\[\frac{1}{s^3}\]</span></td></tr><tr class="even"><td><span class="math display">\[\frac{t^n}{n!}\]</span></td><td><span class="math display">\[\frac{1}{s^{n+1}}\]</span></td></tr><tr class="odd"><td><span class="math display">\[\delta(t-t_0)\]</span></td><td><span class="math display">\[e^{-{t_0}s}\]</span></td></tr><tr class="even"><td><span class="math display">\[\cos(\alpha t)\]</span></td><td><span class="math display">\[\frac s {s^2+\alpha^2}\]</span></td></tr><tr class="odd"><td><span class="math display">\[\sin(\alpha t)\]</span></td><td><span class="math display">\[\frac \alpha {s^2+\alpha^2}\]</span></td></tr><tr class="even"><td><span class="math display">\[f(a t)\]</span></td><td><span class="math display">\[\frac{1}{\|a\|}f(\frac sa)\]</span></td></tr><tr class="odd"><td><span class="math display">\[f(t-a)u(t-a)\]</span></td><td><span class="math display">\[e^{-as} F(s)\]</span></td></tr><tr class="even"><td><span class="math display">\[e^{at} f(t)\]</span></td><td><span class="math display">\[F(s-a)\]</span></td></tr></tbody></table><h2 id="微分和积分">微分和积分</h2><table><colgroup><col style="width: 48%" /><col style="width: 51%" /></colgroup><thead><tr class="header"><th>时域 <span class="math inline">\(f(t)\)</span></th><th>频域 <span class="math inline">\(F(s)=\mathscr L[f(t)]\)</span></th></tr></thead><tbody><tr class="odd"><td><span class="math display">\[\frac{\mathrm df(t)}{\mathrm dt}\]</span></td><td><span class="math display">\[sF(s)-f(0)\]</span></td></tr><tr class="even"><td><span class="math display">\[\frac{\mathrm d^2f(t)}{\mathrm dt^2}\]</span></td><td><span class="math display">\[s^2F(s)-sf(0)-f&#39;(0)\]</span></td></tr><tr class="odd"><td><span class="math display">\[\frac{\mathrm d^nf(t)}{\mathrm dt^n}\]</span></td><td><span class="math display">\[s^nF(s)-\sum^n_{k-1}s^{k-1}f^{(n-k)}(0)\]</span></td></tr><tr class="even"><td><span class="math display">\[tf(t)\]</span></td><td><span class="math display">\[-F&#39;(s)\]</span></td></tr><tr class="odd"><td><span class="math display">\[(-1)^n t^n f(t)\]</span></td><td><span class="math display">\[F^{(n)}(s)\]</span></td></tr><tr class="even"><td><span class="math display">\[\frac 1 t f(t)\]</span></td><td><span class="math display">\[\int_s^\infty F(σ)\mathrm dσ\]</span></td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%8A%A8%E6%80%81%E5%88%97%E8%A1%A8/">动态列表</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E7%A7%AF%E5%88%86%E5%8F%98%E6%8D%A2/">积分变换</category>
      
      <category domain="https://blog.xinshijiededa.men/tags/%E6%95%B0%E5%AD%A6/">数学</category>
      
      
      <comments>https://blog.xinshijiededa.men/laplace-transform-cheatsheet/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>第十四届蓝桥杯（Web 应用开发）第二次模拟赛题解</title>
      <link>https://blog.xinshijiededa.men/lanqiao-14-web-2/</link>
      <guid>https://blog.xinshijiededa.men/lanqiao-14-web-2/</guid>
      <pubDate>Sat, 26 Nov 2022 14:32:32 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;2022 年，我所用的语言被评为全球最烂语言。为什么呢？垃圾框架层出不穷，运行环境千差万别，类型错误数量全网第一。&lt;/p&gt;
&lt;p&gt;这是事实，无法否认，但开发者们还是蜂拥而来。这语言总会给你一丝希望，vite 也好，next 也罢，但如此近，仿佛触手</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>2022 年，我所用的语言被评为全球最烂语言。为什么呢？垃圾框架层出不穷，运行环境千差万别，类型错误数量全网第一。</p><p>这是事实，无法否认，但开发者们还是蜂拥而来。这语言总会给你一丝希望，vite 也好，next 也罢，但如此近，仿佛触手可及，让人奋不顾身。</p><p>这里充斥着网页，而我正是那页面仔！</p></blockquote><p><img src="https://user-images.githubusercontent.com/20166026/204100099-c0ce7ec8-8f95-42b2-b39c-e554180f45a6.png" /></p><blockquote><p>代码请移步至 GitHub <a href="https://github.com/OverflowCat/lanqiao-14-web">OverflowCat/lanqiao-14-web</a>。</p></blockquote><h2 id="凭空消失的-ta">凭空消失的 TA</h2><h3 id="题目">题目</h3><blockquote><p>初始代码中的 <code>index.html</code> 在浏览器中并没有显示出来表单组件 <code>myform</code>。考生需要认真检查提供的代码，找出表单消失的原因，并修复掉，最终让表单 “重见天日”。</p></blockquote><h3 id="思路">思路</h3><p>这题跟 Vue 2 半毛钱关系没有，单纯是 <code>index.html</code> 中没有引用 Element UI 的 js 😅</p><h3 id="代码">代码</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git 凭空消失的TA/index.html</span></span><br><span class="line"><span class="meta">@@ -8,6 +8,7 @@</span>  &lt;title&gt;凭空消失的 TA&lt;/title&gt;</span><br><span class="line">  &lt;script src=&quot;./js/vue.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;./js/http-vue-loader.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+ &lt;script src=&quot;./element-ui-2.15.10/index.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">  &lt;!-- 引入 element-ui 样式 --&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;./element-ui-2.15.10/index.css&quot; /&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><h2 id="用户名片">用户名片</h2><h3 id="思路-1">思路</h3><blockquote><p>The year is 2049...</p><p>All websites use Tailwind, there are only 69 people remaining that know how to write custom CSS.</p><p>These 69 people have to center divs to save the world.</p><p>They are our only hope.</p><p>(This is my pitch to Netflix for an upcoming movie)</p></blockquote><p>Credit: <a href="https://twitter.com/thejackforge/status/1560637007742701570">TheJackForge</a></p><p>In case you still do not know how to center <code>div</code>s horizontally &amp; vertically, refer to <a href="https://blog.hubspot.com/website/center-div-css">11 Ways to Center Div or Text in Div in CSS</a> or <a href="https://segmentfault.com/a/1190000014116655">CSS-水平居中、垂直居中、水平垂直居中</a>.</p><h3 id="代码-1">代码</h3><figure><img src="https://raw.githubusercontent.com/OverflowCat/lanqiao-14-web/master/%E7%94%A8%E6%88%B7%E5%90%8D%E7%89%87/center-divs.webp" alt="" /><figcaption>效果图</figcaption></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.avatar</span>,</span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user-card</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="芝麻开门">芝麻开门</h2><h3 id="题目-1">题目</h3><blockquote><p>找到 <code>index.js</code> 文件中的 <code>mPrompt</code> 函数，完成函数中的 TODO 部分。</p><ol type="1"><li>点击 “点击弹出对话框，输入咒语” 按钮会调用 <code>mPrompt</code> 函数，<code>mPrompt</code> 调用后页面显示对话框。<code>mPrompt</code> 函数必须返回一个 <code>promise</code> 对象。</li><li>在对话框中的输入框中输入文字后，点击确认按钮，对话框消失， <code>promise</code> 返回成功，<code>promise</code> 成功的值为输入的值。</li><li>只有当成功的值为 “芝麻开门” 时门自动打开（已实现）。</li><li>点击取消，对话框消失，<code>promise</code> 返回失败，失败的值为 <code>false</code>。</li><li>对话框的显示隐藏请使用 DOM 节点的添加删除实现。</li></ol></blockquote><h3 id="思路-2">思路</h3><p>本题考察 Promise。在返回的 Promise 中添加 onclick 事件，并在函数中调用 Promise 的参数。</p><h3 id="代码-2">代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> incantations = <span class="string">&quot;芝麻开门&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params">el</span>) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.wrapper .btn&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">mPrompt</span>()</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res === incantations) &#123;</span><br><span class="line">          <span class="variable language_">document</span></span><br><span class="line">            .<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#door .doors&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            .<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;door-left&quot;</span>);</span><br><span class="line">          <span class="variable language_">document</span></span><br><span class="line">            .<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#door .doors&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">            .<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;door-right&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 调用函数，开启弹窗，记录输入框的内容，并通过 promise 异步返回输入框中的内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">Promise</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mPrompt</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 弹窗必须使用以下结构 template 保存的是弹窗的结构字符串，可以先转化为 DOM 再通过 appendChild 方式插入到 body 中</span></span><br><span class="line">  <span class="keyword">const</span> template = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;modal&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;message-box&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;message-header&quot;&gt;请输入咒语&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;message-body&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;input type=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;message-footer&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;button class=&quot;btn btn-small&quot; id=&#x27;cancel&#x27;&gt;取消&lt;/button&gt;</span></span><br><span class="line"><span class="string">                    &lt;button class=&quot;btn btn-small btn-primary&quot; id=&#x27;confirm&#x27;&gt;确定&lt;/button&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">  <span class="comment">// TODO：待补充代码</span></span><br><span class="line">  div.<span class="property">innerHTML</span> = template;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(div);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">hide</span> = (<span class="params"></span>) =&gt; div.<span class="title function_">remove</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(</span><br><span class="line">    <span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      div.<span class="title function_">querySelector</span>(<span class="string">&quot;button#cancel&quot;</span>).<span class="property">onclick</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">hide</span>();</span><br><span class="line">        <span class="title function_">reject</span>(<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      div.<span class="title function_">querySelector</span>(<span class="string">&quot;button#confirm&quot;</span>).<span class="property">onclick</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(div.<span class="title function_">querySelector</span>(<span class="string">&quot;input&quot;</span>).<span class="property">value</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="宝贵的一票">宝贵的一票</h2><h3 id="题目-2">题目</h3><blockquote><p>完成 <code>index.html</code> 文件中的 TODO 部分。 1. 点击添加选项，页面中新增一个选项。选项前文字按照：选项 1，选项 2，选项 3 ...... 顺序排列，当页面中的选项大于 2 个时，选项后面跟随删除按钮（即 x 图标）。带有删除图标的选项 DOM 结构如下： <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">label</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 删除图标 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/x.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure> 2. 点击删除按钮，删除当前选项，并且选项前文字按照：选项 1，选项 2，选项 3 ...... 顺序排列，当选项数量小于等于 2 个时，选项后面无删除按钮。</p></blockquote><h3 id="思路-3">思路</h3><p>这题要求点删除按钮的时候删除的是对应的文本框，并且后面的选项序号需要再次排序。注意如果增加了选项的话，<code>选项1</code> 和 <code>选项2</code> 也是需要删除按钮的。直接 <code>querySelector</code> 改内容就好了，注意 template 的结构。</p><h3 id="代码-3">代码</h3><p>见 <code>./宝贵的一票/index.html</code>。</p><h2 id="粒粒皆辛苦">粒粒皆辛苦</h2><blockquote><p><strong>介绍</strong></p><p>俗话说 “民以食为天”，粮食的收成直接影响着民生问题，通过对农作物产量的统计数据也能分析出诸多实际问题。</p><p>接下来就让我们使用 ECharts 图表，完成 X 市近五年来的农作物产量的统计图吧～</p><p><strong>准备</strong></p><p>本题已经内置了初始代码，打开实验环境，目录结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">├── data.json</span><br><span class="line">├── index.html</span><br><span class="line">└── js</span><br><span class="line">    ├── axios.min.js</span><br><span class="line">    └── echarts.min.js</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>index.html</code> 是主页面。</li><li><code>js/echarts.min.js</code> 是 ECharts 文件。</li><li><code>js/axios.min.js</code> 是 axios 文件。</li><li><code>data.json</code> 是对应年份的粮食产量数据，单位为万吨。</li></ul><p>选中 <code>index.html</code> 右键启动 Web Server 服务（Open with Live Server），让项目运行起来。</p><p>接着，打开环境右侧的【Web 服务】，就可以在浏览器中看到如下效果：</p><p><strong>目标</strong></p><p>请完成 <code>index.html</code> 文件中的 TODO 部分。</p><ol type="1"><li>完成数据请求（数据来源 <code>./data.json</code>）。</li><li><code>data.json</code> 中的数据中英文对照如下：<table><thead><tr><th align="center">英文名称</th><th align="center">中文名称</th></tr></thead><tbody><tr><td align="center">wheat</td><td align="center">小麦</td></tr><tr><td align="center">soybean</td><td align="center">大豆</td></tr><tr><td align="center">potato</td><td align="center">马铃薯</td></tr><tr><td align="center">corn</td><td align="center">玉米</td></tr></tbody></table></li><li>在页面的折线图和饼形图中正确显示粮食产量数据。其中折线图为五年数据，饼图只显示 2022 年数据。</li></ol></blockquote><h3 id="思路-4">思路</h3><p>使用 <code>myChart.setOption()</code> 更新数据。EChart 会检测 diff。这个框架可以看一看 <a href="https://www.runoob.com/echarts/echarts-ajax-data.html">菜鸟教程</a>。</p><h2 id="绝美宋词">绝美宋词</h2><h3 id="题目-3">题目</h3><blockquote><p>请使用 Vue ，完成 <code>index.html</code> 文件中的 TODO 部分。</p><ol type="1"><li>完成数据请求（数据来源 <code>./data.json</code>），<code>data.json</code> 是宋词数据，<code>poetry_content</code> 表示词句，<code>title</code> 表示词牌名，<code>author</code> 表示词人。</li><li>在输入框输入关键词时在 <code>ul</code>（<code>class = suggestions</code>）的元素中<strong>实时显示</strong>词牌名、词句、词人中包含关键词的<strong>完整词句（包含词牌名、词人）列表</strong>，当关键词为空或者匹配不到时 <code>ul</code>（<code>class = suggestions</code>）元素的子节点为空。完整词句的 DOM 结构按照如下规定显示：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>词句<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>词牌名 - 词人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">    &gt;</span>常记溪亭日暮，沉醉不知归路。兴尽晚回舟，误入藕花深处。争渡，争渡，惊起一滩鸥鹭&lt;/span</span><br><span class="line">  &gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>如梦令 - 李清照<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>高亮匹配到的所有词句中的关键词。即使用 <code>&lt;span&gt;&lt;/span&gt;</code> 标签包裹所有关键词。</li></ol><p>例：(关键词：雨)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">    &gt;</span>寒蝉凄切，对长亭晚，骤<span class="tag">&lt;<span class="name">span</span>&gt;</span>雨&lt;/span</span><br><span class="line">    &gt;初歇。都门帐饮无绪，方留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去千里烟波，暮霭沉沉楚天阔。多情自古伤离别，更那堪冷落清秋节。今宵酒醒何处，杨柳岸晓风残月。此去经年，应是良辰美景虚设。便纵有千种风情，更与何人说&lt;/span</span><br><span class="line">  &gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>雨<span class="tag">&lt;/<span class="name">span</span>&gt;</span>霖铃 - 柳永<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：<strong>本题要求的是实时显示，即输入完成的同时显示结果，非失去焦点显示</strong>。</p></blockquote></blockquote><h3 id="思路-5">思路</h3><p>这是我第一次用 Vue。在 Vue 2 中把 <code>&lt;input/&gt;</code> 的 <code>value</code> 绑定到变量并且在 <code>input</code> 更新时调用函数的方法：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;input</span><br><span class="line">type=&quot;text&quot;</span><br><span class="line">id=&quot;search&quot;</span><br><span class="line">class=&quot;search&quot;</span><br><span class="line">placeholder=&quot;词牌名 词句 词人&quot;</span><br><span class="line"><span class="addition">+ v-model=&quot;query&quot;</span></span><br><span class="line"><span class="addition">+ @input=&quot;handleInput&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>根据文档，<code>@input</code> 会过滤掉 IME 的 buffer。题目给的效果图好像并没有这个行为，不过也过了，毕竟不知评测机制，并且没人会写带 IME 的 test。</p><h3 id="代码-4">代码</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@@ -14,8 +14,12 @@</span></span><br><span class="line">    &lt;h1 style=&quot;text-align: center&quot;&gt;输入关键字，找一首词&lt;/h1&gt;</span><br><span class="line">    &lt;!-- TODO：待补充代码 --&gt;</span><br><span class="line">    &lt;div class=&quot;search-form&quot;&gt;</span><br><span class="line"><span class="deletion">-     &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;search&quot; placeholder=&quot;词牌名 词句 词人&quot; /&gt;</span></span><br><span class="line"><span class="addition">+     &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;search&quot; placeholder=&quot;词牌名 词句 词人&quot; v-model=&quot;query&quot; @input=&quot;handleInput&quot; /&gt;</span></span><br><span class="line">      &lt;ul class=&quot;suggestions&quot;&gt;</span><br><span class="line"><span class="addition">+       &lt;li v-for=&quot;poem in filtered&quot;&gt;</span></span><br><span class="line"><span class="addition">+         &lt;span class=&quot;poet&quot; v-html=&quot;poem.poetry_content&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="addition">+         &lt;span class=&quot;title&quot; v-html=&quot;poem.title&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="addition">+       &lt;/li&gt;</span></span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"><span class="meta">@@ -23,6 +27,40 @@</span></span><br><span class="line">    let vm = new Vue(&#123;</span><br><span class="line">      el: &#x27;#app&#x27;,</span><br><span class="line">      // TODO：待补充代码</span><br><span class="line"><span class="addition">+     data: &#123;</span></span><br><span class="line"><span class="addition">+       query: &#x27;&#x27;,</span></span><br><span class="line"><span class="addition">+       poems: [],</span></span><br><span class="line"><span class="addition">+       filtered: []</span></span><br><span class="line"><span class="addition">+     &#125;,</span></span><br><span class="line"><span class="addition">+     created() &#123;</span></span><br><span class="line"><span class="addition">+       this.queryData()</span></span><br><span class="line"><span class="addition">+     &#125;,</span></span><br><span class="line"><span class="addition">+     methods: &#123;</span></span><br><span class="line"><span class="addition">+       highlight(text) &#123;</span></span><br><span class="line"><span class="addition">+         return `&lt;span class=&quot;highlight&quot;&gt;$&#123;text&#125;&lt;/span&gt;`;</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+       queryData() &#123;</span></span><br><span class="line"><span class="addition">+         axios.get(&#x27;./data.json&#x27;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="addition">+           this.poems = res.data;</span></span><br><span class="line"><span class="addition">+         &#125;)</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+       handleInput(e) &#123;</span></span><br><span class="line"><span class="addition">+         if (this.query) this.filterData(this.query);</span></span><br><span class="line"><span class="addition">+         else this.filterData(&quot;哈哈哈没有东西!!&quot;)</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+       filterData(keyword) &#123;</span></span><br><span class="line"><span class="addition">+         this.filtered = this.poems.filter(</span></span><br><span class="line"><span class="addition">+           x =&gt; x.poetry_content.includes(keyword)</span></span><br><span class="line"><span class="addition">+             || x.author.includes(keyword)</span></span><br><span class="line"><span class="addition">+             || x.title.includes(keyword)</span></span><br><span class="line"><span class="addition">+         ).map(x =&gt; &#123;</span></span><br><span class="line"><span class="addition">+           return &#123;</span></span><br><span class="line"><span class="addition">+             poetry_content: x.poetry_content.replaceAll(keyword, this.highlight(keyword)),</span></span><br><span class="line"><span class="addition">+             title: `$&#123;x.title&#125; - $&#123;x.author&#125;`.replaceAll(keyword, this.highlight(keyword)),</span></span><br><span class="line"><span class="addition">+           &#125;</span></span><br><span class="line"><span class="addition">+         &#125;)</span></span><br><span class="line"><span class="addition">+       &#125;</span></span><br><span class="line"><span class="addition">+     &#125;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="资讯接口">资讯接口</h2><h3 id="题目-4">题目</h3><blockquote><p><strong>介绍</strong></p><p>随着技术的发展，很多前端工程师已经不满足于只做诸如页面布局和交互这些开发工作了，很多人将目光逐渐转向了 “大前端” 范围，其中就包括不需要依赖后端提供接口自己就可以使用 node.js 编写一个后端接口服务。</p><p>下面就让我们也来使用 node.js 完成一个新闻资讯接口吧。</p><p><strong>目标</strong></p><ol type="1"><li>通过在 <code>app.js</code> 书写代码，创建一个服务器，使服务在 <strong>8080</strong> 端口运行。</li><li>访问 <code>/news</code> 返回资讯数据，访问其他任意路径均返回<strong>字符串 404</strong> 。</li></ol><table><thead><tr><th>Url</th><th>请求方式</th><th>参数</th><th>响应结果</th></tr></thead><tbody><tr><td>news</td><td>GET</td><td>空</td><td>显示资讯数据</td></tr></tbody></table><p>数据需要设置为 <code>utf8</code> 格式，资讯数据格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;channelId&quot;</span>: <span class="string">&quot;5572a108b3cdc86cf39001cd&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;国内焦点&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;channelId&quot;</span>: <span class="string">&quot;5572a108b3cdc86cf39001ce&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;国际焦点&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>设置 <code>utf8</code> 格式代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;text/html;charset=utf8&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>通过 <code>node app.js</code> 运行代码，使服务处于运行状态，点击右侧 【web 服务】，页面上显示访问域名 +'/news' 返回资讯数据。</li></ol></blockquote><h3 id="思路-6">思路</h3><p>使用 <code>http.createServer()</code>。注意一下设置 <code>Content-type</code> 的方式。</p><h3 id="代码-5">代码</h3><p>见对应目录。</p><h2 id="平地起高楼">平地起高楼</h2><h3 id="题目-5">题目</h3><p>相当于把 <code>&#123;id: number, parent_id: number: name&#125;[]</code> 嵌套起来返回 <code>&#123;id: number, parent_id: number: name, children: self[]&#125;</code>。</p><h3 id="思路-7">思路</h3><p>维护一个 <code>pid =&gt; id[]</code> 的 Map，并把原数组转成以 <code>id</code> 为 key 的 Map 即可。</p><h2 id="收快递了">收快递了</h2><h3 id="题目-6">题目</h3><p>相当于在 <code>&#123;id: number, parent_id: number: name, children: self[]&#125;</code> 中找到目标。</p><h3 id="思路-8">思路</h3><p>递归即可。最后这两道标为了「困难」的题目其实就是不会 TLE 的算法题，没啥难度。倒是好久没写 JS 老是类型错误，尤其是前面 <a href="#宝贵的一票">宝贵的一票</a> parent 就没类型了，比较讨厌。📃</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3/">算法题解</category>
      
      <category domain="https://blog.xinshijiededa.men/categories/%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3/frontend/">页面仔的自我修养</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/">蓝桥杯</category>
      
      
      <comments>https://blog.xinshijiededa.men/lanqiao-14-web-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>如何在 AutoCAD 中标注公差</title>
      <link>https://blog.xinshijiededa.men/tolerance-in-autocad/</link>
      <guid>https://blog.xinshijiededa.men/tolerance-in-autocad/</guid>
      <pubDate>Thu, 24 Nov 2022 09:53:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;在 AutoCAD 2014 中，有两种标注&lt;strong&gt;公差&lt;/strong&gt;的方式。&lt;/p&gt;
&lt;h2 id=&quot;通过特性窗格&quot;&gt;通过「特性」窗格&lt;/h2&gt;
&lt;p&gt;在已有的标注上右键，打开「特性」窗格。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://tele</description>
        
      
      
      
      <content:encoded><![CDATA[<p>在 AutoCAD 2014 中，有两种标注<strong>公差</strong>的方式。</p><h2 id="通过特性窗格">通过「特性」窗格</h2><p>在已有的标注上右键，打开「特性」窗格。</p><figure><img src="http://telegra.ph/file/540a9fe796d6a51b73282.png" alt="" /><figcaption>右键菜单</figcaption></figure><figure><img src="http://telegra.ph/file/d5ae69a9615a1aa6437ff.png" alt="" /><figcaption>公差</figcaption></figure><p>需要将「显示公差」设为「极限偏差」。注意选择精度。</p><p>「公差消去前导零」为「是」会省略小数点前面的 0。</p><figure><img src="http://telegra.ph/file/792b20aa1b988fe7323a6.png" alt="" /><figcaption>开启公差消去前导零</figcaption></figure><p>「公差消去后续零」为「否」会填充 0。</p><figure><img src="http://telegra.ph/file/a646234170dfcf2bd39fd.png" alt="" /><figcaption>关闭公差消去后续零</figcaption></figure><h2 id="通过堆叠">通过「堆叠」</h2><p>输入 <code>符号 值 上偏差/下偏差</code>，然后选中 <code>上偏差/下偏差</code>。</p><p><img src="http://telegra.ph/file/a5e6105150a35e110e1df.png" /></p><p>在选中的文本中有 <code>/</code> 时右键菜单会多出一个「堆叠」的选项。</p><p><img src="http://telegra.ph/file/d844e454c8b91b99c2425.png" /></p><p><img src="http://telegra.ph/file/f1eb111b161668c71d0f3.png" /></p><p>或者，也可以点选 <code>TEXTEDIT</code> 工具栏中的图标。</p><figure><img src="http://telegra.ph/file/b67a8ae0728365868acb6.png" alt="" /><figcaption>图标</figcaption></figure><p>再次右键堆叠后的文字，打开「堆叠特性」。</p><figure><img src="http://telegra.ph/file/c6448eb051d12a373b8fa.png" alt="" /><figcaption>堆叠特性</figcaption></figure><p>「样式」选择「公差」以消除分数线。</p><figure><img src="http://telegra.ph/file/69c1343f4bc77492dc2c8.png" alt="" /><figcaption>堆叠特性</figcaption></figure><p>结果如下。</p><p><img src="http://telegra.ph/file/b763f36b74cbf9bb64f63.png" /></p><p><img src="http://telegra.ph/file/2e5f91739f4a585055e57.png" /></p><p>以上。🅰️</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%88%B6%E5%9B%BE/">制图</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/AutoCAD/">AutoCAD</category>
      
      
      <comments>https://blog.xinshijiededa.men/tolerance-in-autocad/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Graham 扫描法求凸包</title>
      <link>https://blog.xinshijiededa.men/erect-the-fence/</link>
      <guid>https://blog.xinshijiededa.men/erect-the-fence/</guid>
      <pubDate>Sat, 19 Nov 2022 14:58:41 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;题目&quot;&gt;题目&lt;/h2&gt;
&lt;p&gt;今天的力扣（LCUS）每日挑战是 &lt;a href=&quot;https://leetcode.cn/problems/erect-the-fence/&quot;&gt;587. 安装栅栏&lt;/a&gt;．&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个二维的花园中</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="题目">题目</h2><p>今天的力扣（LCUS）每日挑战是 <a href="https://leetcode.cn/problems/erect-the-fence/">587. 安装栅栏</a>．</p><blockquote><p>在一个二维的花园中，有一些用 <span class="math inline">\((x, y)\)</span> 坐标表示的树．由于安装费用十分昂贵，你的任务是先用最短的绳子围起所有的树．只有当所有的树都被绳子包围时，花园才能围好栅栏．你需要找到正好位于栅栏边界上的树的坐标．</p></blockquote><h2 id="知识点">知识点</h2><p>其实质是求若干点组成的二维 <a href="https://oi-wiki.org/geometry/convex-hull/">凸包</a>（convex hull）．常用的求法有 Graham 扫描法（<a href="https://en.wikipedia.org/wiki/Graham_scan">Graham's scan</a>）和 Andrew 算法，本文提供了一个由 Rust 实现的 Graham 扫描法．</p><h2 id="思路">思路</h2><p>算法的步骤如下：</p><ol type="1"><li>若点个数少于 3 个，则直接返回输入．否则按如下方法求解．</li><li>首先，找出纵坐标最小的点．若有多个，则选横坐标最小的点．以该点建立极坐标系．</li><li>此时，将所有的点按照极角的大小升序排列，若有极角相同的，则再按该点到极点距离升序排列．</li><li>然后维护一个栈．先将排列好的点的前两个入栈，然后对于其后的每一个点 <span class="math inline">\(C\)</span>，记栈中最后一个点为 <span class="math inline">\(B\)</span>，倒数第二个点为 <span class="math inline">\(A\)</span>，若以 <span class="math inline">\(A\)</span> 为圆心，<span class="math inline">\(\overrightarrow{AC}\)</span> 在 <span class="math inline">\(\overrightarrow{AB}\)</span> 顺时针方向，则说明为凹，需要出栈一次，重复上述步骤，直至<span class="math inline">\(\overrightarrow{AC}\)</span> 与 <span class="math inline">\(\overrightarrow{AB}\)</span> 重合，或前者在后者逆时针方向．此时再将 C 点入栈．</li><li>处理完所有的点后，需要再找出不在栈中但在栈的最后一个点与栈的第一个点构成的线段上的点．</li></ol><h2 id="示例">示例</h2><h3 id="输入数据">输入数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">3</span>,<span class="number">0</span>],[<span class="number">4</span>,<span class="number">0</span>],[<span class="number">5</span>,<span class="number">0</span>],[<span class="number">6</span>,<span class="number">1</span>],[<span class="number">7</span>,<span class="number">2</span>],[<span class="number">7</span>,<span class="number">3</span>],[<span class="number">7</span>,<span class="number">4</span>],[<span class="number">6</span>,<span class="number">5</span>],[<span class="number">5</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">5</span>],[<span class="number">3</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">1</span>],[<span class="number">4</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">3</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- - * * * * * -</span><br><span class="line">- * - - - - - *</span><br><span class="line">* * - - - - - *</span><br><span class="line">- * - - * - - *</span><br><span class="line">- - * - - - * -</span><br><span class="line">- - - * * * - -</span><br></pre></td></tr></table></figure><h3 id="预期结果">预期结果</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">4</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">5</span>],[<span class="number">6</span>,<span class="number">1</span>],[<span class="number">3</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">7</span>,<span class="number">4</span>],[<span class="number">7</span>,<span class="number">3</span>],[<span class="number">7</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">3</span>],[<span class="number">5</span>,<span class="number">0</span>],[<span class="number">5</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">0</span>],[<span class="number">6</span>,<span class="number">5</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- - * * * * * -</span><br><span class="line">- * - - - - - *</span><br><span class="line">* - - - - - - *</span><br><span class="line">- * - - - - - *</span><br><span class="line">- - * - - - * -</span><br><span class="line">- - - * - * - -</span><br></pre></td></tr></table></figure><h3 id="错误结果">错误结果</h3><p>若没有第 5 步，则缺少两点 <span class="math inline">\((1, 2), (2, 1)\)</span> <span class="math inline">\(\small{\mathrm{(0-indexed)}}\)</span>．</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="number">7</span>,<span class="number">3</span>],[<span class="number">5</span>,<span class="number">0</span>],[<span class="number">7</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">5</span>],[<span class="number">1</span>,<span class="number">4</span>],[<span class="number">4</span>,<span class="number">0</span>],[<span class="number">5</span>,<span class="number">5</span>],[<span class="number">6</span>,<span class="number">1</span>],[<span class="number">3</span>,<span class="number">0</span>],[<span class="number">6</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">5</span>],[<span class="number">7</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">5</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- - * * * * * -</span><br><span class="line">- * - - - - - *</span><br><span class="line">* - - - - - - *</span><br><span class="line">- - - - - - - *</span><br><span class="line">- - - - - - * -</span><br><span class="line">- - - * * * - -</span><br></pre></td></tr></table></figure><h2 id="计算">计算</h2><p>需要用到一些向量的性质．</p><h3 id="判断逆时针">判断逆时针</h3><p>两向量叉积为正，则 <span class="math inline">\(\overrightarrow{AC}\)</span> 在 <span class="math inline">\(\overrightarrow{AB}\)</span> 的逆时针方向．</p><h3 id="判断点在线段上">判断点在线段上</h3><p>记线段为 <span class="math inline">\(AB\)</span>，点为 <span class="math inline">\(P\)</span>，保证 <span class="math inline">\(A\)</span>、<span class="math inline">\(B\)</span>、<span class="math inline">\(P\)</span> 三点不重合．若 <span class="math inline">\(\overrightarrow{AP}\cdot\overrightarrow{BP} = -|AP|\cdot|BP|\)</span>，则点在线段上．</p><h2 id="代码">代码</h2><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> std::&#123;cmp::Ordering::*, collections::HashSet&#125;;</span><br><span class="line"><span class="meta">#[derive(Copy, Clone, Debug, Hash, Eq, PartialEq)]</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span>(<span class="type">i32</span>, <span class="type">i32</span>);</span><br><span class="line"><span class="keyword">impl</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="meta">#[inline]</span></span><br><span class="line">    <span class="keyword">fn</span> <span class="title function_">cross_product</span>(x_1: <span class="type">i32</span>, y_1: <span class="type">i32</span>, x_2: <span class="type">i32</span>, y_2: <span class="type">i32</span>) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line">        x_1 * y_2 - x_2 * y_1</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">outer_trees</span>(trees: <span class="type">Vec</span>&lt;<span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;&gt;) <span class="punctuation">-&gt;</span> <span class="type">Vec</span>&lt;<span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> trees.<span class="title function_ invoke__">len</span>() &lt; <span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> trees;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">init</span> = (<span class="number">114514</span>, <span class="number">114514</span>);</span><br><span class="line">        trees.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">for_each</span>(|t| <span class="keyword">match</span> t[<span class="number">1</span>].<span class="title function_ invoke__">cmp</span>(&amp;init.<span class="number">1</span>) &#123;</span><br><span class="line">            Less =&gt; &#123;</span><br><span class="line">                init = (t[<span class="number">0</span>], t[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            Equal =&gt; &#123;</span><br><span class="line">                init.<span class="number">0</span> = init.<span class="number">0</span>.<span class="title function_ invoke__">min</span>(t[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            _ =&gt; &#123;&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// println!(&quot;左下角的点是 &#123;:?&#125;&quot;, init);</span></span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">trees</span>: <span class="type">Vec</span>&lt;Tree&gt; = trees</span><br><span class="line">            .<span class="title function_ invoke__">into_iter</span>()</span><br><span class="line">            .<span class="title function_ invoke__">map</span>(|t| <span class="title function_ invoke__">Tree</span>(t[<span class="number">0</span>] - init.<span class="number">0</span>, t[<span class="number">1</span>] - init.<span class="number">1</span>))</span><br><span class="line">            <span class="comment">// 这里以左下角的点为 (0, 0)</span></span><br><span class="line">            .<span class="title function_ invoke__">collect</span>();</span><br><span class="line">        trees.<span class="title function_ invoke__">sort_by</span>(</span><br><span class="line">            |a, b| <span class="keyword">match</span> &#123; <span class="number">0</span>.<span class="title function_ invoke__">cmp</span>(&amp;<span class="keyword">Self</span>::<span class="title function_ invoke__">cross_product</span>(a.<span class="number">0</span>, a.<span class="number">1</span>, b.<span class="number">0</span>, b.<span class="number">1</span>)) &#125; &#123;</span><br><span class="line">                Equal =&gt; (a.<span class="number">0</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>) + a.<span class="number">1</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>)).<span class="title function_ invoke__">cmp</span>(&amp;(b.<span class="number">0</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>) + b.<span class="number">1</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>))),</span><br><span class="line">                res =&gt; res,</span><br><span class="line">            &#125;,</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">stack</span> = <span class="type">Vec</span>::<span class="title function_ invoke__">new</span>();</span><br><span class="line">        stack.<span class="title function_ invoke__">push</span>(trees[<span class="number">0</span>]);</span><br><span class="line">        stack.<span class="title function_ invoke__">push</span>(trees[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">t</span> <span class="keyword">in</span> trees.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">skip</span>(<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">length</span> = stack.<span class="title function_ invoke__">len</span>();</span><br><span class="line">                length &gt; <span class="number">1</span> &amp;&amp; &#123;</span><br><span class="line">                    <span class="keyword">let</span> (a, b) = (stack[stack.<span class="title function_ invoke__">len</span>() - <span class="number">2</span>], stack[stack.<span class="title function_ invoke__">len</span>() - <span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">let</span> <span class="variable">x_1</span> = t.<span class="number">0</span> - a.<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">let</span> <span class="variable">y_1</span> = t.<span class="number">1</span> - a.<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">let</span> <span class="variable">x_2</span> = b.<span class="number">0</span> - a.<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">let</span> <span class="variable">y_2</span> = b.<span class="number">1</span> - a.<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">Self</span>::<span class="title function_ invoke__">cross_product</span>(x_1, y_1, x_2, y_2) &gt; <span class="number">0</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; &#123;</span><br><span class="line">                stack.<span class="title function_ invoke__">pop</span>().<span class="title function_ invoke__">unwrap</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            stack.<span class="title function_ invoke__">push</span>(t.<span class="title function_ invoke__">clone</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">trees</span>: HashSet&lt;_&gt; = trees.<span class="title function_ invoke__">into_iter</span>().<span class="title function_ invoke__">collect</span>();</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">x</span> <span class="keyword">in</span> &amp;stack &#123;</span><br><span class="line">            trees.<span class="title function_ invoke__">remove</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">Tree</span>(p1x, p1y) = stack[stack.<span class="title function_ invoke__">len</span>() - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">Tree</span>(p2x, p2y) = stack[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">extra</span>: <span class="type">Vec</span>&lt;Tree&gt; = trees <span class="comment">// 栈中最后一个点与栈中第一个点构成的线段上的点</span></span><br><span class="line">            .<span class="title function_ invoke__">into_iter</span>()</span><br><span class="line">            .<span class="title function_ invoke__">filter_map</span>(|a| &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">Tree</span>(p_x, p_y) = a;</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">vec1</span> = (p_x - p1x, p_y - p1y);</span><br><span class="line">                <span class="keyword">let</span> <span class="variable">vec2</span> = (p_x - p2x, p_y - p2y);</span><br><span class="line">                <span class="title function_ invoke__">if</span> (vec1.<span class="number">0</span> * vec2.<span class="number">0</span> + vec1.<span class="number">1</span> * vec2.<span class="number">1</span>).<span class="title function_ invoke__">pow</span>(<span class="number">2</span>)</span><br><span class="line">                    == (vec1.<span class="number">0</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>) + vec1.<span class="number">1</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>)) * (vec2.<span class="number">0</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>) + vec2.<span class="number">1</span>.<span class="title function_ invoke__">pow</span>(<span class="number">2</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="title function_ invoke__">Some</span>(a)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="literal">None</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_ invoke__">collect</span>();</span><br><span class="line">        stack</span><br><span class="line">            .<span class="title function_ invoke__">into_iter</span>()</span><br><span class="line">            .<span class="title function_ invoke__">chain</span>(extra.<span class="title function_ invoke__">into_iter</span>())</span><br><span class="line">            .<span class="title function_ invoke__">map</span>(|x| <span class="built_in">vec!</span>[x.<span class="number">0</span> + init.<span class="number">0</span>, x.<span class="number">1</span> + init.<span class="number">1</span>])</span><br><span class="line">            .<span class="title function_ invoke__">collect</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下是测试部分</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Solution</span>;</span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">res</span>: HashSet&lt;<span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;&gt; = HashSet::<span class="title function_ invoke__">from_iter</span>(</span><br><span class="line">        Solution::<span class="title function_ invoke__">outer_trees</span>(<span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">1</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">4</span>], <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">3</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">2</span>]]).<span class="title function_ invoke__">into_iter</span>(),</span><br><span class="line">    );</span><br><span class="line">    <span class="built_in">assert_eq!</span>(</span><br><span class="line">        res,</span><br><span class="line">        HashSet::<span class="title function_ invoke__">from_iter</span>(</span><br><span class="line">            <span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">1</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">2</span>],</span><br><span class="line">            <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">3</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">4</span>]].<span class="title function_ invoke__">into_iter</span>()</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">res</span>: HashSet&lt;<span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;&gt; = HashSet::<span class="title function_ invoke__">from_iter</span>(Solution::<span class="title function_ invoke__">outer_trees</span>(<span class="built_in">vec!</span>[</span><br><span class="line">        <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">5</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">6</span>, <span class="number">1</span>], <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">2</span>], <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">4</span>], <span class="built_in">vec!</span>[<span class="number">6</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">5</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">4</span>], <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">3</span>], <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">1</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">2</span>], <span class="built_in">vec!</span>[<span class="number">0</span>, <span class="number">3</span>]</span><br><span class="line">    ]));</span><br><span class="line">    <span class="built_in">assert_eq!</span>(</span><br><span class="line">        res, HashSet::<span class="title function_ invoke__">from_iter</span>(</span><br><span class="line">            <span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">6</span>, <span class="number">1</span>], <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">            <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">4</span>], <span class="built_in">vec!</span>[<span class="number">1</span>, <span class="number">2</span>], <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">4</span>], <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">3</span>], <span class="built_in">vec!</span>[<span class="number">7</span>, <span class="number">2</span>], <span class="built_in">vec!</span>[<span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line">            <span class="built_in">vec!</span>[<span class="number">0</span>, <span class="number">3</span>], <span class="built_in">vec!</span>[<span class="number">5</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">5</span>, <span class="number">5</span>], <span class="built_in">vec!</span>[<span class="number">4</span>, <span class="number">0</span>], <span class="built_in">vec!</span>[<span class="number">6</span>, <span class="number">5</span>]].<span class="title function_ invoke__">into_iter</span>()</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上．🌲</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3/">算法题解</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%8A%9B%E6%89%A3%E6%AF%8F%E6%97%A5%E6%8C%91%E6%88%98/">力扣每日挑战</category>
      
      
      <comments>https://blog.xinshijiededa.men/erect-the-fence/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>截面的几何性质</title>
      <link>https://blog.xinshijiededa.men/geometric-properties-of-cross-sections/</link>
      <guid>https://blog.xinshijiededa.men/geometric-properties-of-cross-sections/</guid>
      <pubDate>Sat, 19 Nov 2022 08:59:30 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;静距和形心&quot;&gt;静距和形心&lt;/h2&gt;
&lt;h3 id=&quot;定义&quot;&gt;定义&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;\(S_z\)&lt;/span&gt; 表示截面到 &lt;span class=&quot;math inline&quot;&gt;\(z\)&lt;/span&gt; 轴的静距，</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="静距和形心">静距和形心</h2><h3 id="定义">定义</h3><p><span class="math inline">\(S_z\)</span> 表示截面到 <span class="math inline">\(z\)</span> 轴的静距， <span class="math inline">\(y_C\)</span> 表示形心的 <span class="math inline">\(y\)</span> 轴坐标．</p><p>静距的量纲为长度的 3 次方．</p><p>截面对某个轴线的静距是微元面积与其到该轴线距离的乘积的积分，即</p><p><span class="math display">\[S_y=\int\limits_{A} z\mathrm d A\]</span></p><p><span class="math display">\[S_z=\int\limits_{A} y\mathrm d A\]</span></p><h3 id="定理">定理</h3><p>由<strong>合力矩定理</strong>可得</p><p><span class="math display">\[z_C=\frac{S_y}{A}, y_C=\frac{S_z}{A}.\]</span></p><p>故我们有</p><p><span class="math display">\[S_y=z_CA, S_z=y_CA.\]</span></p><p>如果我们选择的<strong>坐标轴</strong>穿过了形心，则其称作<strong>形心轴</strong>．此时 <span class="math inline">\(z_C\)</span> 或 <span class="math inline">\(y_C\)</span> 为 <span class="math inline">\(0\)</span> ．又 <span class="math inline">\(A\)</span> 不为 <span class="math inline">\(0\)</span> ，所以 <span class="math inline">\(S_y\)</span> 或 <span class="math inline">\(S_z\)</span> 为 <span class="math inline">\(0\)</span>．即有定理：<strong>若坐标轴是形心轴，则截面对其静矩为 <span class="math inline">\(0\)</span></strong>．其逆命题也成立．</p><h3 id="计算">计算</h3><p>若界面形状由多个基本图形组成，则形心坐标为各图形静距之和与各图形面积之和的比值．</p><p>实际计算中，可以记住基本图形的公式，无需通过积分求．</p><h4 id="矩形的静距">矩形的静距</h4><p>矩形的静距为长、宽、矩形形心到轴距离三者的乘积：</p><p><span class="math display">\[S_z=bh\cdot\frac 1 2 h=\frac 1 2 bh^2.\]</span></p><h2 id="惯性矩">惯性矩</h2><h3 id="定义-1">定义</h3><p>惯性矩的量纲为长度的 4 次方．</p><p>截面对某个轴线的惯性矩是微元面积与其到该轴线距离 2 次方乘积的积分，即</p><p><span class="math display">\[I_{z}=\int\limits_{A} y^{2} \mathrm{~d} A\]</span></p><p><span class="math display">\[I_{y}=\int\limits_{A} z^{2} \mathrm{~d} A\]</span></p><h3 id="计算-1">计算</h3><h4 id="矩形的惯性矩">矩形的惯性矩</h4><p>对 <span class="math inline">\(z\)</span> 轴</p><p><span class="math display">\[I_z=\frac{bh^3}{3}\]</span></p><p>其中， <span class="math inline">\(b\)</span> 为宽， <span class="math inline">\(h\)</span> 为高．</p><p>对形心轴</p><p><span class="math display">\[I_z=\frac{bh^3}{12}\]</span></p><h4 id="圆的惯性矩">圆的惯性矩</h4><p>对形心轴</p><p><span class="math display">\[I_z = \frac{\pi D^4}{64}\]</span></p><h4 id="圆环的惯性矩">圆环的惯性矩</h4><p><span class="math display">\[I_z = \frac{\pi D^4(1-{\frac d D}^4)}{64}\]</span></p><p>其中， <span class="math inline">\(d\)</span> 为内环直径， <span class="math inline">\(D\)</span> 为外环直径．</p><h4 id="三角形的惯性矩">三角形的惯性矩</h4><p><span class="math display">\[I_z = \frac{bh^3}{36}\]</span></p><p>其中， <span class="math inline">\(b\)</span> 为底边长， <span class="math inline">\(h\)</span> 为高．</p><h3 id="定理-1">定理</h3><p>由<strong>平行轴定理</strong>，对<strong>转动惯量</strong>，我们有</p><p><span class="math display">\[I_{z&#39;}=I_C+Md^2\]</span></p><p>其中， <span class="math inline">\(M\)</span> 为刚体质量．</p><p>对惯性矩，我们也有</p><p><span class="math display">\[I_z = I_x + Ad^2\]</span></p><h2 id="极惯性矩">极惯性矩</h2><h3 id="定义-2">定义</h3><p>截面对于一个轴的<strong>极惯性矩</strong>，又称<strong>截面二次极矩</strong>，是截面上微元面积与其到坐标原点距离 2 次方乘积的积分，即</p><p><span class="math display">\[I_p = \int\limits_A\rho^2\mathrm d A\]</span></p><p>其中， <span class="math inline">\(\rho\)</span> 为微元距轴的距离．</p><p>有</p><p><span class="math display">\[I_p = \int\limits_A\rho^2\mathrm d A=\int\limits_A(z^2+y^2)\mathrm d A=I_y+I_z.\]</span></p><p>以上．🪵</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6/">材料力学</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <comments>https://blog.xinshijiededa.men/geometric-properties-of-cross-sections/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>「是的，我很好」</title>
      <link>https://blog.xinshijiededa.men/i-am-fine/</link>
      <guid>https://blog.xinshijiededa.men/i-am-fine/</guid>
      <pubDate>Fri, 18 Nov 2022 14:49:48 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;u&gt;胡桃沢 · サタニキア · マクドウェル&lt;/u&gt;在频道「心惊报」上 &lt;a href=&quot;https://t.me/c/1501598444/166331&quot;&gt;投稿&lt;/a&gt;：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;//telegra.ph/file/00734577</description>
        
      
      
      
      <content:encoded><![CDATA[<p><u>胡桃沢 · サタニキア · マクドウェル</u>在频道「心惊报」上 <a href="https://t.me/c/1501598444/166331">投稿</a>：</p><figure><img src="//telegra.ph/file/00734577b158cb8de66da.jpg" alt="" /><figcaption>多邻国题目截图</figcaption></figure><p>虽然多邻国的「通过中文学…」的课程中，句子翻译接受的答案数量与英文课程相比来说少得可怜，但是<span lang="ja">「はい、元気です」</span>这一句话在给定的词汇下，的确只能翻译成「是的，我很好」而不是「是，我好<i>的[sic]</i>很」。首先，在形容词後应该用「得 + 副词」修饰程度，而非「的」。粤语没有这个问题，因为「<ruby>的<rt>dik1</rt></ruby>」「<ruby>得<rt>dak1</rt></ruby>」「<ruby>地<rt>dei6</rt></ruby>」三个字的发音不同。其次，原句中没有出现程度，在这一句式中，「很」並不表示程度。比如 <a href="https://cn.linkedin.com/pulse/%E5%9C%A8%E7%BE%8E%E5%9B%BD%E6%95%99%E4%B8%AD%E6%96%87%E5%BE%88%E5%AD%97%E5%9C%A8-%E5%BE%88%E5%BD%A2%E5%AE%B9%E8%AF%8D%E5%8F%A5%E4%B8%AD%E7%9A%84%E5%8A%9F%E8%83%BD%E4%BB%A5%E5%8F%8A%E5%AF%B9%E6%95%99%E5%B0%B1%E5%AD%97%E7%9A%84%E6%83%B3%E6%B3%95-thomas-wong-wong">这篇文章</a> 中就提到：</p><blockquote><p>今天很热。她很高兴。我的猫很聪明。英语很难。 在这些句子里，形容词:“热”、“高兴”、“聪明”、“难”前都有一个副词“很”，这个“很”字，不总是代表“非常”或“<i>及[sic]</i>其”的意思，而只是语气的需要。</p></blockquote><p>因为你毕竟不能说「今天是热的」「她是高兴的」「我的猫是聪明的」「英语是难的」「我是好的」，所以你只能借助「很」「挺」这几个词来连接主语和形容词。</p><p><span class="dead">王力</span>的《中国现代语法》中也说：</p><blockquote><p>试拿“两家很和厚”和“两家和厚得很”相比较，则见后者比前者更有力量，这是因为特别着重“很”字，把它升为次系谓语的缘故。</p></blockquote><p>尽管如此，我都不推荐你在多邻国通过中文（简体）学任何非汉语语言。</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%92%AC%E6%96%87%E5%9A%BC%E5%AD%97/">咬文嚼字</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%A4%9A%E9%82%BB%E5%9B%BD/">多邻国</category>
      
      <category domain="https://blog.xinshijiededa.men/tags/%E6%B1%89%E8%AF%AD/">汉语</category>
      
      <category domain="https://blog.xinshijiededa.men/tags/%E7%BF%BB%E8%AF%91/">翻译</category>
      
      
      <comments>https://blog.xinshijiededa.men/i-am-fine/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>下蛋的毛奶猪</title>
      <link>https://blog.xinshijiededa.men/eierlegende-wollmilchsau/</link>
      <guid>https://blog.xinshijiededa.men/eierlegende-wollmilchsau/</guid>
      <pubDate>Sat, 08 Oct 2022 06:47:27 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;本文译自德国驻美大使馆 2011 年 10 月 28 日的文章：&lt;a href=&quot;https://germanyinusa.com/2011/10/28/word-of-the-week-eierlegende-wollmilchsau/&quot;&gt;&lt;em</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>本文译自德国驻美大使馆 2011 年 10 月 28 日的文章：<a href="https://germanyinusa.com/2011/10/28/word-of-the-week-eierlegende-wollmilchsau/"><em>Word of the Week: Eierlegende Wollmilchsau</em></a>。封面图片：<a href="https://de.wikipedia.org/wiki/Datei:Wollmilchsau.png">Eierlegende Wollmilchsau, German for "egg-laying wool-milk-sow"</a> by <a href="https://de.wikipedia.org/wiki/User:Pixelrausch">de:User:Pixelrausch</a>, <a href="https://creativecommons.org/licenses/by-sa/2.0">CC BY-SA 2.0</a></p></blockquote><p>想象这样一幅画面：一头猪，浑身长着蓬松的毛，会下蛋，会产奶。这就是本周的关键词——<em>Eierlegende Wollmilchsau</em>，直译为「生蛋的　羊毛－牛奶－母猪」。虽然这种小动物可能听起来有点像自然界的怪胎，但它确是每个农民的梦想——结合了鸡（下蛋）、羊（产毛）、牛（产奶）和猪（做成熏肉）的品质的完美农场动物。它味道鲜美，还可以生产所有的日常必需品：它是一种没有缺点的动物。不消说，这种生物并不存在。</p><p>虽然这样一种可爱、美味又有用的生物可能不存在，但它确实存在于比喻中。其比喻意义是试图做多种工作的工具或人。当然，找到像这样的一个全能的工具或人，几乎和找到神话中的生物一样难。</p><p>是故如今该词语大多被用于描述一些无法实现的理想。这证明德国人不仅具有精巧的讽刺意识，而且比人们认为的更有创造力。一个完美而又讽刺的使用例是，招聘广告上的要求如此之多、如此之泛，以至于没有一个人会满足所有这些要求。</p><p>不过，随着新技术的惊人发展，完全可以想象这个词会有新的含义。过去，最接近这个词的东西是瑞士军刀，但看起来这个词将能出色地形容新一代的智能机。至于手机公司是否乐意他们的产品被描述为「下蛋的毛奶猪」，那就又是另一回事了。🥚</p><hr /><p><a href="https://zh.wikipedia.org/wiki/%E7%B4%84%E7%BF%B0%C2%B7%E6%A0%BC%E9%AD%AF%E4%BC%AF">John Gruber</a> 在其博客 Daring Fireball 中 <a href="https://daringfireball.net/linked/2022/10/07/eierlegende-wollmilchsau">引用了这篇文章并评论道</a>：</p><blockquote><p>如果「X」不成功的话，这会是 Elon Musk 的「<a href="https://daringfireball.net/2022/10/everything">Everything App</a>」的一个良好的暂定名称（译注：原文为 <a href="https://zh.wikipedia.org/wiki/%E6%9A%82%E5%AE%9A%E5%90%8D%E7%A7%B0">working name</a>）。<br /><a href="https://twitter.com/mmackh/status/1578216921291542528">感谢 Maximilian Mackh 提供的链接</a>。（还有感谢德国大使馆将这一「春梦」写成一篇有趣的文章。）</p></blockquote><hr /><p>2022 年 10 月 8 日。<a href="https://ipfs.io/ipfs/Qmbf73dbDuQv4zss9Mf1164kZecqNNKBYx7q9CLstCnxHf/">点此在 IPFS 上查看</a>。</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E5%92%AC%E6%96%87%E5%9A%BC%E5%AD%97/">咬文嚼字</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E8%AF%91%E6%96%87/">译文</category>
      
      <category domain="https://blog.xinshijiededa.men/tags/%E5%BE%B7%E8%AF%AD/">德语</category>
      
      
      <comments>https://blog.xinshijiededa.men/eierlegende-wollmilchsau/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>逻辑和无逻辑</title>
      <link>https://blog.xinshijiededa.men/logical-or-not/</link>
      <guid>https://blog.xinshijiededa.men/logical-or-not/</guid>
      <pubDate>Fri, 07 May 2021 13:29:23 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;北京高考英语、生物和语文注重考查逻辑。&lt;/p&gt;
&lt;p&gt;这是我在江苏未曾想到的。以英语为例，就是说即使译成中文，明明白白地知道作者在说什么，你也不知道依逻辑推断出的正确的答案。我第一次做北京的一篇简单的阅读，四道选择居然全部错误：你无法在文章中找到完全匹配的答案。命题人试图通</description>
        
      
      
      
      <content:encoded><![CDATA[<p>北京高考英语、生物和语文注重考查逻辑。</p><p>这是我在江苏未曾想到的。以英语为例，就是说即使译成中文，明明白白地知道作者在说什么，你也不知道依逻辑推断出的正确的答案。我第一次做北京的一篇简单的阅读，四道选择居然全部错误：你无法在文章中找到完全匹配的答案。命题人试图通过「同义替换」来考察，然而他们的想法天马行空而深刻奇妙，替换后的内容与原文是否一致，全仗那标准答案说了算。</p><p>怎么能说是有逻辑呢？</p><p>无独有偶，语文的非连续性文本阅读也如此，不过稍为简单一些。这样一来，我在阅读文章的时候会想，我理解的作者那乖张的说话口气不是叙述时的自然流露，而是为了印证中心论点，并且试图脑控读者。</p><p>而生物的逻辑体现在实验题上。从描述实验现象到写出推断过程，从填空到画示意图，考察生物基础知识的着实很少，考察逻辑「关系」的很多。大抵就是让看看两者之间的关系、三者之间上下游的调控关系、四者之间是否有协同作用… 不一而足。而生物老师的讲课语音语调都没有突出重点，让所有上伊的课的人都昏昏欲睡。</p><p>至于数学，<a href="https://telegra.ph/%E5%8C%97%E4%BA%AC%E9%AB%98%E8%80%83%E7%90%86%E7%A7%91%E6%95%B0%E5%AD%A6%E5%8E%8B%E8%BD%B4%E9%A2%98%E9%A3%8E%E6%A0%BC%E6%A6%82%E8%BF%B0-05-07">压轴题固然不是我所能做出来的</a>，顶多第二问能写上一些。主要是过于创新，导致平时训练的内容和考察的内容没有什么关系，感觉练了考试也只能听天由命——这在任何学科上都是常有的现象。而且简单的题过于简单，不太适合咱这个分数段上的。而且平时模拟考试也很少，周测只有短短的 45 分钟，实在找不到感觉。</p><p>数学老师常说，《考纲》「要求考生克服紧张情绪，以平和的心态参加考试，合理支配考试时间，以实事求是的科学态度解答试题，树立战胜困难的信心，体现锲而不舍的精神」。就好像你深知你练习的内容可能跟高考毫无关联，深知你高考的时候该错的还是会错，深知你要用你那并不娴熟的逻辑推理去做那并没有什么逻辑道理的题，但是你依然满怀信心地参加考试一样。📝</p><hr /><p>2021 年 5 月 7 日 9 时于纯纯写作。</p>]]></content:encoded>
      
      
      <category domain="https://blog.xinshijiededa.men/categories/%E9%A2%98%E9%9A%99%E7%A2%8E%E7%AC%94/">题隙碎笔</category>
      
      
      <category domain="https://blog.xinshijiededa.men/tags/%E8%80%83%E8%AF%95/">考试</category>
      
      
      <comments>https://blog.xinshijiededa.men/logical-or-not/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
