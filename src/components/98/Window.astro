---
export type Props = {
  id?: string;
  element?: `div` | `section` | `aside` | `nav` | `article` | `main`;
  title: string;
  width?: number | string;
  minimize?: () => void;
  maximize?: () => void;
  close?: () => void;
};
const { title, id, width } = Astro.props;
const Element = Astro.props.element || `aside`;
// let widthVar = width;
// if (typeof width === `number`) {
//   widthVar = `${width}px`;
// } else if (typeof width === `undefined`) {
//   if (Element === `aside`) {
//     widthVar = `600px`;
//   } else {
//     widthVar = `100%`;
//   }
// }
---

<Element class="window" id={id}>
  <div class="title-bar">
    <div class="title-bar-text" set:text={title} />
    <div class="title-bar-controls">
      <button aria-label="Minimize"></button>
      <button aria-label="Maximize"></button>
      <button aria-label="Close"></button>
    </div>
  </div>
  <div class="window-body">
    <slot />
  </div>
</Element>

<style define:vars={{ width }}>
  .window {
    margin-left: 1em;
    max-width: 100%;
  }
  @media (min-width: 800px) {
    aside.window {
      float: right;
      width: var(--width, 600px);
    }
  }
</style>
