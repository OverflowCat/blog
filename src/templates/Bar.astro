---
export interface Props {
  index?: number;
  theme?: "transparent" | "dark" | "light" | "auto";
  lang: "zh-Hans" | "zh-Hant" | "en";
}

import Logo from "@components/Logo.astro";
import slogans from "@scripts/slogans.ts";
import { pick } from "@/scripts/serendipity";

const items = [
  ["主页", "Home", "/"],
  ["归档", "Archives", "/archives"],
  ["友链", "Friends", "/friends"],
  ["订阅", "RSS", "/atom.xml"],
  ["关于", "About", "/about"],
];
let { index, theme, lang } = Astro.props;

const slogan = pick(slogans)[lang || "zh-Hans"];
---

<nav>
  <div id="logo">
    <Logo theme={theme} />
  </div>
  <div id="slogan" set:text={slogan} />
  <ol>
    {
      items.map((item, i) => (
        <li>
          <a
            href={item[2]}
            data-replace={index === i ? "本页" : item[0]}
            class={index === i ? "current" : ""}
          >
            <span>
              &nbsp;
              <span>{item[0]}</span>
              <span class="en" lang="en">
                / {item[1]}
              </span>
              &nbsp;
            </span>
          </a>
        </li>
      ))
    }
  </ol>
</nav>

<style
  lang="less"
  define:vars={{
    "active-color": theme === "dark" ? "white" : "#black",
    "hint-color": theme === "dark" ? "#c3c3c3" : "#3c3c3c",
  }}
>
  * {
    user-select: none;
  }
  #slogan {
    margin: 8px 0;
    color: var(--hint-color, #3c3c3c);
  }
  #logo,
  #slogan,
  ol {
    text-align: center;
    place-items: center center;
  }
  #logo {
    padding: 1rem 2px 0.2rem;
    margin: 0 auto;
  }
  ol {
    font-size: 18px;
    margin: 0.3rem 0 0.6rem auto;
    margin-block-start: auto;
    margin-block-end: auto;
    padding-inline-start: 2px;
    padding-inline-end: 2px;
  }
  li {
    display: inline-block;
    text-align: center;
    margin-inline-start: 0.3em;
    margin-inline-end: 0.3em;
    font-weight: 700;
  }
  a {
    line-height: 200%;
    overflow-x: hidden;
    position: relative;
    display: inline-block;
    border-bottom: none !important;
    text-decoration: none;
    color: var(--hint-color, #434343);
    &.current {
      height: 100%;
      top: 0;
      transform-origin: 100% 50%;
      color: var(--active-color);
    }
    &::before,
    &::after {
      content: "";
      position: absolute;
      width: 100%;
      left: 0;
    }
    &::before {
      background-color: var(--active-color);
      height: 2px;
      bottom: 0;
      transform-origin: 100% 50%;
      transform: scaleX(0);
      transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    }
    &::after {
      content: attr(data-replace);
      height: 100%;
      top: 0;
      transform-origin: 100% 50%;
      transform: translate3d(200%, 0, 0);
      transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
      color: var(--active-color);
    }
    &:hover {
      &::before {
        transform-origin: 0% 50%;
        transform: scaleX(1);
      }
      &::after {
        transform: translate3d(0, 0, 0);
      }
    }
    span {
      display: inline-block;
      transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    }
    &:hover span {
      transform: translate3d(-200%, 0, 0);
    }
  }
</style>
