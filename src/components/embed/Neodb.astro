---
export type Props = {
	post?: string | bigint;
	item: string;
};

const {
	post,
	item,
} = Astro.props;
import type { Game, Movie, NeoItem } from "@/scripts/schema/neodb";
import { getEntry } from "astro:content";

const entry = await getEntry("neodb", item);
if (!entry) {
	throw new Error("Entry not found");
}
const data = entry.data as NeoItem;
const {
	id: url,
	display_title: title,
	description: desc,
	rating,
	type: category,
	genre,
	cover_image_url: img,
	localized_title: altTitles,
} = data;
let authors: string[];
let platforms: string[] = [];

if (category === "Game") {
    var {
        developer,
	    publisher,
	    release_date: date
    } = data as Game;
    platforms = (data as Game).platform; 
    authors = developer.concat(publisher);
} else if (category === "Movie") {
    var {
        director,
        actor,
        playwright,
    } = data as Movie;
    var date = data.year.toString();
    authors = director.concat(actor, playwright);
} else {
    authors = [];
    var date = "";
}
const postHref = `https://neodb.social/@overflowcat@neodb.social/posts/${post}/`;
const itemHref = `https://neodb.social/${item}`;
/* img="https://neodb.social/m/item/doubangame/2024/08/16/ed2acb1b-7df3-4dff-a5af-b57c93f57ebc.jpg" title="1比1人形食玩"
 altTitles={{"en": "1 to 1 humanoid edible toys"}}
 category="游戏"
 authors={["汉谟拉比炒面", "我的屁是香哒"]}
 date="2024年8月8日"
 post="347886723885871304"
 item="game/4pOgy2d3N1pjL3qXEOhSOs"
 categories={["视觉小说"]}
 platforms={['Windows', 'macOS']} */
---

<article>
    <div class="item">
        <div class="cover">
            <a href={itemHref}>
                <img src={img} alt="cover">
            </a>
        </div>
        <div class="main">
            <hgroup>
                <h5>
                    <a href={itemHref}>{title}</a>
                    <small>
                        <span class="category">{category}</span>
                        <date>{date}</date>
                    </small>
                </h5>
            </hgroup>
            <div>
                <div class="brief">
                    <div class="multi-fields trim-p">
                        <span>
                            {altTitles.filter(({text}) => text !== title).map(({lang, text}) => (
                                <span lang={lang}><i>{text}</i></span>
                            ))}
                            by {authors.join("、")}
                        </span>
                    </div>
                </div>
                <div class="full">
                    <div class="multi-fields">
                        <span set:html={"<b>类型</b>：" + genre.map(g => (
                                `<span>${g}</span>`
                            )).join(' / ')}>
                        </span>
                        {
                            platforms?.length > 0 && <span set:html={
                            "<b>平台</b>：" + platforms.map(platform => (
                                `<span>${platform}</span>`
                            )).join(' / ')
                        }></span>
                        }
                    </div>
                    <div class="desc">
                        {
                            desc && <p set:html={desc} class="trim-p" />
                        }
                    </div>
                    <slot />
                </div>
            </div>
        </div>
    </div>
</article>

<style>
article {
    padding: .5rem;
    margin: .5rem;
    background-color: #f5f5f5b7;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    font-size: .95rem;
    line-height: 1.5;
}

hgroup {
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.5;
}
h5 {
    margin-block: .25em; 
}
h5 a {font-size: 1.25em; }

.item {
    display: flex;
    gap: 20px;
    align-items: center;
    /* flex: 1; */
}

.flex {
display: flex;
align-items: center; /* 使子元素上下居中 */
}

.cover {
    flex-shrink: 0; /* 防止 cover 缩小 */
}

.cover img {
    width: min(155px, 32vi);
    height: auto;
    display: block;
}

.main {
    flex-grow: 1; /* 使 main 占据剩下的空间 */
}

.category {
    margin-right: 5px;
    padding: 2px 5px;
    background-color: #f0f0f0;
    border-radius: 3px;
    font-size: 12px;
}

.site-list a {
    margin-right: 5px;
    color: #333;
    text-decoration: none;
}

.multi-fields span {
    margin-inline-end: 10px;
}

.trim-p {
    display: -webkit-box;
    text-overflow: ellipsis;
    -webkit-line-clamp: 4;
    -webkit-box-orient: block-axis;
    overflow: hidden;
}
</style>