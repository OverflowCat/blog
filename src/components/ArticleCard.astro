---
export interface Props {
  post: CollectionEntry<"blog">;
}

import type { CollectionEntry } from "astro:content";
import { formatPostDate } from "../scripts/date";
import { Icon } from "astro-icon/components";
import { getIconName } from "@/scripts/icons";
import { crc32base } from "@/scripts/serendipity";
import "@/styles/title.less";
import "@/styles/icon.less";

const { post } = Astro.props;
---

<table>
  <tr>
    <td class="content">
      <div>
        <span class="icon title-icon">
          {(<Icon name={getIconName(post) || "ph:hash-bold"} />)}
        </span><a
          class="title"
          transition:name={crc32base(post.data.title)}
          href={`/${post.slug}/`}>{post.data.title || "No title"}</a
        >
        {
          !post.data.description && (
            <time
              class="title-date"
              datetime={post.data.date?.toISOString() || ""}
              set:text={formatPostDate(post.data.date)}
            />
          )
        }
      </div>
      <blockquote>
        {post.data.description}
        {
          post.data.description && (
            <a class="continue" href={`/${post.slug}`}>
              阅读更多 →
            </a>
          )
        }
        {
          post.data.description && (
            <time
              class="title-date"
              datetime={post.data.date?.toISOString() || ""}
              set:text={formatPostDate(post.data.date)}
            />
          )
        }
      </blockquote>
    </td>
    {
      post.data.photo && (
        <td class="title-img">
          <img
            class="title-img"
            loading="lazy"
            transition:name={crc32base(
              typeof post.data.photo === "string"
                ? post.data.photo
                : post.data.photo?.src,
            )}
            height={
              typeof post.data.photo !== "string"
                ? post.data.photo.aspect.split(":")[0]
                : ""
            }
            width={
              typeof post.data.photo !== "string"
                ? post.data.photo.aspect.split(":")[1]
                : ""
            }
            src={
              typeof post.data.photo === "string"
                ? post.data.photo
                : post.data.photo?.src
            }
            alt={
              typeof post.data.photo !== "string" && post.data.photo.alt
                ? post.data.photo.alt
                : post.data.title
            }
          />
        </td>
      )
    }
  </tr>
</table>

<style lang="less" is:global>
  td {
    padding: 0px;
    &.content {
      vertical-align: top;
    }
    &.title-img {
      inline-size: 175px;
      #vert:target & {
        inline-size: 0; // WTF???
      }
    }
  }
</style>
<style lang="less">
  .continue {
    font-size: 90%;
    margin: 0;
    margin-inline-start: 4px;
    margin-inline-end: 4px;
    color: #6d6d6d;
    user-select: none;
    text-decoration: none;
  }
  blockquote {
    margin-block-start: 6px;
    margin-block-end: 6px;

    color: #383838;
    border-inline-start: 4px solid #ddd;
    color: var(--blockquote-color);
    padding: 0;
    padding-inline-start: 11px;
  }
  .title-date {
    float: right;
    inset-block-end: 2px;
  }
  table {
    inline-size: 100%;
    border-collapse: collapse;
  }

  img.title-img {
    margin-inline-start: 10px;
    width: 175px;
    height: auto;
    border-radius: 4px;
  }
  @media (max-width: 650px) {
    td.title-img {
      display: none;
    }
  }
</style>
